#!/usr/bin/env node

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å GitHub
 * –ó–∞–ø—É—Å–∫: node sync-to-github.js "–æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
 */

import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

const GITHUB_REPO = 'https://github.com/BAWION/novaai.git';

function log(message, color = '\x1b[36m') {
  console.log(`${color}%s\x1b[0m`, `[SYNC] ${message}`);
}

function runCommand(command, description) {
  try {
    log(description);
    const result = execSync(command, { encoding: 'utf-8', stdio: 'pipe' });
    if (result.trim()) {
      console.log(result.trim());
    }
    return true;
  } catch (error) {
    console.error(`\x1b[31m[ERROR] ${description}: ${error.message}\x1b[0m`);
    return false;
  }
}

function buildProject() {
  log('–°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ dist –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  if (!fs.existsSync('dist/public')) {
    if (!runCommand('npm run build', '–ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ Vite')) {
      return false;
    }
  } else {
    log('–°–±–æ—Ä–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...');
  }
  
  return true;
}

function initGitIfNeeded() {
  if (!fs.existsSync('.git')) {
    log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...');
    if (!runCommand('git init', '–°–æ–∑–¥–∞–Ω–∏–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è')) return false;
    if (!runCommand(`git remote add origin ${GITHUB_REPO}`, '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ remote origin')) return false;
  }
  return true;
}

function syncToGitHub() {
  const commitMessage = process.argv[2] || `–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ${new Date().toLocaleString('ru-RU')}`;
  
  log('–ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å GitHub...');
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  if (!initGitIfNeeded()) return false;
  
  // –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
  if (!buildProject()) return false;
  
  // –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
  const configFiles = [
    { src: 'vercel.json', dest: 'vercel.json' },
    { src: 'package-for-github.json', dest: 'package.json' },
    { src: 'README.md', dest: 'README.md' }
  ];
  
  log('–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');
  configFiles.forEach(({ src, dest }) => {
    if (fs.existsSync(src)) {
      fs.copyFileSync(src, dest);
      log(`–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω ${src} ‚Üí ${dest}`);
    }
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ Git
  if (!runCommand('git add .', '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ Git')) return false;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  try {
    const status = execSync('git status --porcelain', { encoding: 'utf-8' });
    if (!status.trim()) {
      log('–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏');
      return true;
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Git:', error.message);
  }
  
  // –ö–æ–º–º–∏—Ç –∏ –ø—É—à
  if (!runCommand(`git commit -m "${commitMessage}"`, '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞')) return false;
  if (!runCommand('git push origin main', '–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ GitHub')) return false;
  
  log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!', '\x1b[32m');
  log('Vercel –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç —Å–∞–π—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 –º–∏–Ω—É—Ç');
  
  return true;
}

function showUsage() {
  console.log(`
üöÄ –ë—ã—Å—Ç—Ä–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å GitHub –∏ Vercel

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  node sync-to-github.js "–æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"

–ü—Ä–∏–º–µ—Ä—ã:
  node sync-to-github.js "–¥–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π –∫—É—Ä—Å"
  node sync-to-github.js "–∏—Å–ø—Ä–∞–≤–∏–ª –±–∞–≥–∏ –≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ"
  node sync-to-github.js

–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç:
  1. –°–æ–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç (npm run build)
  2. –ö–æ–ø–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Vercel
  3. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub
  4. Vercel –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–∞–π—Ç

–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:
  ‚Ä¢ GitHub: https://github.com/BAWION/novaai
  ‚Ä¢ Vercel: https://vercel.com/dashboard
  `);
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  if (process.argv.includes('--help') || process.argv.includes('-h')) {
    showUsage();
    return;
  }
  
  const success = syncToGitHub();
  process.exit(success ? 0 : 1);
}

main().catch(console.error);