-- –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–∞ "Telegram-–±–æ—Ç—ã –Ω–∞ Replit –±–µ–∑ –∫–æ–¥–∞"
INSERT INTO courses (
  id, title, slug, description, difficulty, level, modules, estimated_duration, 
  tags, access, objectives, prerequisites, skills_gained, created_at, updated_at
)
VALUES (
  10,
  '–°–æ–∑–¥–∞–Ω–∏–µ Telegram-–±–æ—Ç–æ–≤ –Ω–∞ Replit –±–µ–∑ –∫–æ–¥–∞',
  'telegram-bots-replit',
  '–ü—Ä–æ—Å—Ç–æ–µ –≤–≤–µ–¥–µ–Ω–∏–µ –≤ —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é —à–∞–±–ª–æ–Ω–æ–≤, –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∏ Replit. –¢–µ–ª–µ–≥—Ä–∞–º-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–æ–ø—É–ª—è—Ä–Ω–∞ –≤ –°–ù–ì, –∞ –±–æ—Ç—ã ‚Äî –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ –∫–æ–¥–µ.',
  1,
  'basic',
  5,
  180,
  '["telegram", "–±–æ—Ç—ã", "replit", "no-code", "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"]',
  'free',
  '["–°–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ Telegram-–±–æ—Ç–∞ –±–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è", "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –∏ –∫–æ–º–∞–Ω–¥—ã", "–ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏", "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –±–æ—Ç–∞ –Ω–∞ Replit —Å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–æ–π", "–ú–æ–Ω–µ—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞"]',
  '["–ë–∞–∑–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º", "–ê–∫–∫–∞—É–Ω—Ç –≤ Telegram"]',
  '["–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–æ–≤", "Replit", "No-code —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏", "–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è"]',
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  description = EXCLUDED.description,
  updated_at = NOW();

-- –ú–æ–¥—É–ª—å 1: –û—Å–Ω–æ–≤—ã Telegram-–±–æ—Ç–æ–≤
INSERT INTO course_modules (id, course_id, title, description, order_index, created_at, updated_at)
VALUES (
  44,
  10,
  '–û—Å–Ω–æ–≤—ã Telegram-–±–æ—Ç–æ–≤',
  '–ß—Ç–æ —Ç–∞–∫–æ–µ –±–æ—Ç—ã, –∑–∞—á–µ–º –æ–Ω–∏ –Ω—É–∂–Ω—ã –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç',
  1,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  description = EXCLUDED.description,
  updated_at = NOW();

-- –£—Ä–æ–∫ 1.1: –í–≤–µ–¥–µ–Ω–∏–µ –≤ –º–∏—Ä Telegram-–±–æ—Ç–æ–≤
INSERT INTO lessons (id, module_id, title, type, content, order_index, estimated_duration, created_at, updated_at)
VALUES (
  82,
  44,
  '–í–≤–µ–¥–µ–Ω–∏–µ –≤ –º–∏—Ä Telegram-–±–æ—Ç–æ–≤',
  'theory',
  '# –í–≤–µ–¥–µ–Ω–∏–µ –≤ –º–∏—Ä Telegram-–±–æ—Ç–æ–≤

## –ß—Ç–æ —Ç–∞–∫–æ–µ Telegram-–±–æ—Ç?

Telegram-–±–æ—Ç ‚Äî —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –∫–æ—Ç–æ—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ Telegram. –ë–æ—Ç—ã –º–æ–≥—É—Ç:

- **–û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã** ‚Äî –∫–∞–∫ —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫
- **–ü—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã** ‚Äî –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–≤
- **–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è** ‚Äî –æ –Ω–æ–≤–æ—Å—Ç—è—Ö, –ø–æ–≥–æ–¥–µ, –∫—É—Ä—Å–∞—Ö –≤–∞–ª—é—Ç
- **–†–∞–∑–≤–ª–µ–∫–∞—Ç—å** ‚Äî –∏–≥—Ä—ã, –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã, –º–µ–º—ã
- **–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∏–∑–Ω–µ—Å** ‚Äî –∑–∞–ø–∏—Å—å –Ω–∞ —É—Å–ª—É–≥–∏, –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å

## –ü—Ä–∏–º–µ—Ä—ã —É—Å–ø–µ—à–Ω—ã—Ö –±–æ—Ç–æ–≤

### –ë–∏–∑–Ω–µ—Å-–±–æ—Ç—ã
- **@DominosRobot** ‚Äî –∑–∞–∫–∞–∑ –ø–∏—Ü—Ü—ã
- **@AlfaBankBot** ‚Äî –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —É—Å–ª—É–≥–∏
- **@LabBot** ‚Äî –∑–∞–ø–∏—Å—å –∫ –≤—Ä–∞—á—É

### –†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –±–æ—Ç—ã
- **@GameBot** ‚Äî –∏–≥—Ä—ã
- **@PollBot** ‚Äî –æ–ø—Ä–æ—Å—ã –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è

## –ü–æ—á–µ–º—É –±–æ—Ç—ã –ø–æ–ø—É–ª—è—Ä–Ω—ã –≤ –°–ù–ì?

1. **Telegram –æ—á–µ–Ω—å –ø–æ–ø—É–ª—è—Ä–µ–Ω** ‚Äî –±–æ–ª–µ–µ 50% –Ω–∞—Å–µ–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä
2. **–ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è** ‚Äî –Ω–µ –Ω—É–∂–Ω–æ —Å–∫–∞—á–∏–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
3. **–î–æ–≤–µ—Ä–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π** ‚Äî –ª—é–¥–∏ –ø—Ä–∏–≤—ã–∫–ª–∏ –æ–±—â–∞—Ç—å—Å—è –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞—Ö
4. **–ë—ã—Å—Ç—Ä–æ—Ç–∞** ‚Äî –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

## –ß—Ç–æ –º—ã —Å–æ–∑–¥–∞–¥–∏–º –≤ –∫—É—Ä—Å–µ?

–ö –∫–æ–Ω—Ü—É –∫—É—Ä—Å–∞ —É –≤–∞—Å –±—É–¥–µ—Ç:
- ‚úÖ –†–∞–±–æ—Ç–∞—é—â–∏–π –±–æ—Ç —Å –º–µ–Ω—é –∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
- ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
- ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
- ‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
- ‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

## –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –±–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è

–ú—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
- **BotFather** ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –≤ Telegram
- **Replit** ‚Äî —Ö–æ—Å—Ç–∏–Ω–≥ –∏ –∑–∞–ø—É—Å–∫
- **–ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã** ‚Äî –æ—Å–Ω–æ–≤–∞ –¥–ª—è –±–æ—Ç–∞
- **–í–∏–∑—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã** ‚Äî –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏–∫–∏

–ù–∞—á–Ω–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–∞—à–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –±–æ—Ç–∞!',
  1,
  20,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  content = EXCLUDED.content,
  updated_at = NOW();

-- –£—Ä–æ–∫ 1.2: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞ —á–µ—Ä–µ–∑ BotFather
INSERT INTO lessons (id, module_id, title, type, content, order_index, estimated_duration, created_at, updated_at)
VALUES (
  83,
  44,
  '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞ —á–µ—Ä–µ–∑ BotFather',
  '# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞ —á–µ—Ä–µ–∑ BotFather

## –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å BotFather

BotFather ‚Äî —ç—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç Telegram –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä—É–≥–∏—Ö –±–æ—Ç–æ–≤. –≠—Ç–æ –≤–∞—à –≥–ª–∞–≤–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞–º–∏.

## –ü–æ—à–∞–≥–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è

### –®–∞–≥ 1: –ù–∞–π–¥–∏—Ç–µ BotFather
1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram
2. –í –ø–æ–∏—Å–∫–µ –≤–≤–µ–¥–∏—Ç–µ **@BotFather**
3. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞ (—Å –≥–∞–ª–æ—á–∫–æ–π)
4. –ù–∞–∂–º–∏—Ç–µ **START**

### –®–∞–≥ 2: –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É:
```
/newbot
```

BotFather —Å–ø—Ä–æ—Å–∏—Ç:
1. **–ò–º—è –±–æ—Ç–∞** ‚Äî –∫–∞–∫ –±—É–¥–µ—Ç –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è –≤–∞—à –±–æ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ú–æ–π –ü–µ—Ä–≤—ã–π –ë–æ—Ç")
2. **Username** ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –ø–æ–∏—Å–∫–∞ (–¥–æ–ª–∂–Ω–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ "bot")

### –®–∞–≥ 3: –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω
–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è BotFather –¥–∞—Å—Ç –≤–∞–º **—Ç–æ–∫–µ–Ω** ‚Äî —ç—Ç–æ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º.

**–í–∞–∂–Ω–æ!** 
- –¢–æ–∫–µ–Ω –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫: `1234567890:AAE_example_token_here`
- **–ù–ï –ü–û–ö–ê–ó–´–í–ê–ô–¢–ï —Ç–æ–∫–µ–Ω –¥—Ä—É–≥–∏–º** ‚Äî —ç—Ç–æ –ø–∞—Ä–æ–ª—å –æ—Ç –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
- –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ

## –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã BotFather

### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º:
- `/mybots` ‚Äî —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –±–æ—Ç–æ–≤
- `/deletebot` ‚Äî —É–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞
- `/token` ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞:
- `/setdescription` ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
- `/setabouttext` ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è "–û –±–æ—Ç–µ"
- `/setuserpic` ‚Äî –∞–≤–∞—Ç–∞—Ä –±–æ—Ç–∞
- `/setcommands` ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ –º–µ–Ω—é

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

**–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –±–æ—Ç–∞:**

1. –ù–∞–ø–∏—à–∏—Ç–µ @BotFather –∫–æ–º–∞–Ω–¥—É `/newbot`
2. –ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏–º—è: –Ω–∞–ø—Ä–∏–º–µ—Ä "–ú–æ–π –£—á–µ–±–Ω—ã–π –ë–æ—Ç"
3. –°–æ–∑–¥–∞–π—Ç–µ username: –Ω–∞–ø—Ä–∏–º–µ—Ä "my_study_bot"
4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
5. –ù–∞–π–¥–∏—Ç–µ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ –≤ –ø–æ–∏—Å–∫–µ Telegram

**–†–µ–∑—É–ª—å—Ç–∞—Ç:** –£ –≤–∞—Å –µ—Å—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ—Ç —Å —Ç–æ–∫–µ–Ω–æ–º!

## –ß—Ç–æ –¥–∞–ª—å—à–µ?

–í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –ø–æ–¥–∫–ª—é—á–∏–º –±–æ—Ç–∞ –∫ Replit –∏ –Ω–∞—É—á–∏–º –µ–≥–æ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è. –í–∞—à —Ç–æ–∫–µ–Ω –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!

**–°–æ–≤–µ—Ç:** –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–µ–º—É –±–æ—Ç—É ‚Äî –ø–æ–∫–∞ –æ–Ω –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ —Å–∫–æ—Ä–æ —ç—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—Å—è! ü§ñ',
  2,
  15,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  content = EXCLUDED.content,
  updated_at = NOW();

-- –ú–æ–¥—É–ª—å 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ Replit
INSERT INTO course_modules (id, course_id, title, description, order_index, created_at, updated_at)
VALUES (
  45,
  10,
  '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ Replit',
  '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞ –∫ Replit –∏ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫',
  2,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  description = EXCLUDED.description,
  updated_at = NOW();

-- –£—Ä–æ–∫ 2.1: –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å Replit
INSERT INTO lessons (id, module_id, title, type, content, order_index, estimated_duration, created_at, updated_at)
VALUES (
  84,
  45,
  '–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å Replit',
  '# –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å Replit

## –ß—Ç–æ —Ç–∞–∫–æ–µ Replit?

Replit ‚Äî —ç—Ç–æ –æ–±–ª–∞—á–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –≥–¥–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø—Ä—è–º–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ. –î–ª—è –±–æ—Ç–æ–≤ —ç—Ç–æ –∏–¥–µ–∞–ª—å–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ:

- ‚úÖ **–†–∞–±–æ—Ç–∞–µ—Ç 24/7** ‚Äî –±–æ—Ç –Ω–µ –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è
- ‚úÖ **–ù–µ –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã** ‚Äî –≤—Å–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
- ‚úÖ **–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ** ‚Äî –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —É—á–µ–±–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
- ‚úÖ **–ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã** ‚Äî –º–æ–∂–Ω–æ –Ω–µ –ø–∏—Å–∞—Ç—å –∫–æ–¥ —Å –Ω—É–ª—è

## –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ Replit

### –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ **replit.com**
2. –ù–∞–∂–º–∏—Ç–µ **Sign up**
3. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑:
   - Email
   - Google –∞–∫–∫–∞—É–Ω—Ç
   - GitHub (–µ—Å–ª–∏ –µ—Å—Ç—å)

### –®–∞–≥ 2: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
1. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email, –µ—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å —á–µ—Ä–µ–∑ –ø–æ—á—Ç—É
2. –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω **Starter** (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π)

## –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Replit

### –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:
- **Create** ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
- **My Repls** ‚Äî –≤–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã
- **Explore** ‚Äî –≥–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –æ—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
- **Learn** ‚Äî –æ–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã

### –†–∞–±–æ—á–∞—è –æ–±–ª–∞—Å—Ç—å:
- **–§–∞–π–ª—ã** (—Å–ª–µ–≤–∞) ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
- **–†–µ–¥–∞–∫—Ç–æ—Ä** (—Ü–µ–Ω—Ç—Ä) ‚Äî –∫–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã
- **–ö–æ–Ω—Å–æ–ª—å** (—Å–ø—Ä–∞–≤–∞) ‚Äî –≤—ã–≤–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã
- **Run** (–∑–µ–ª–µ–Ω–∞—è –∫–Ω–æ–ø–∫–∞) ‚Äî –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã

## –ü–æ–∏—Å–∫ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è Telegram-–±–æ—Ç–∞

### –í–∞—Ä–∏–∞–Ω—Ç 1: –ì–æ—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω
1. –ù–∞–∂–º–∏—Ç–µ **Create**
2. –í—ã–±–µ—Ä–∏—Ç–µ **Templates**
3. –í –ø–æ–∏—Å–∫–µ –≤–≤–µ–¥–∏—Ç–µ "telegram bot"
4. –í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –Ω–∞ **Python** –∏–ª–∏ **Node.js**

### –í–∞—Ä–∏–∞–Ω—Ç 2: –ò–º–ø–æ—Ä—Ç –∏–∑ GitHub
1. –ù–∞–∂–º–∏—Ç–µ **Create**
2. –í—ã–±–µ—Ä–∏—Ç–µ **Import from GitHub**
3. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥–æ—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç

## –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –±–æ—Ç–æ–≤

### –ü—Ä–æ—Å—Ç—ã–µ —Å—Ç–∞—Ä—Ç–µ—Ä—ã:
- **python-telegram-bot** ‚Äî –±–∞–∑–æ–≤—ã–π –±–æ—Ç –Ω–∞ Python
- **node-telegram-bot** ‚Äî –±–æ—Ç –Ω–∞ JavaScript
- **telegram-echo-bot** ‚Äî –±–æ—Ç-—ç—Ö–æ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö

### –° –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏:
- **telegram-shop-bot** ‚Äî –±–æ—Ç-–º–∞–≥–∞–∑–∏–Ω
- **telegram-quiz-bot** ‚Äî –±–æ—Ç-–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞
- **telegram-weather-bot** ‚Äî –ø–æ–≥–æ–¥–Ω—ã–π –±–æ—Ç

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –±–æ—Ç–∞

–¢–∏–ø–∏—á–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç:
```
telegram-bot/
‚îú‚îÄ‚îÄ main.py (–∏–ª–∏ index.js)     # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
‚îú‚îÄ‚îÄ requirements.txt (–∏–ª–∏ package.json) # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
‚îú‚îÄ‚îÄ .env                       # –°–µ–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
‚îú‚îÄ‚îÄ config.py                  # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
‚îî‚îÄ‚îÄ handlers/                  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    ‚îú‚îÄ‚îÄ start.py
    ‚îú‚îÄ‚îÄ help.py
    ‚îî‚îÄ‚îÄ commands.py
```

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

**–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:**

1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ replit.com
2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏–∑ —à–∞–±–ª–æ–Ω–∞ "telegram bot"
3. –ò–∑—É—á–∏—Ç–µ —Ñ–∞–π–ª–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
4. –ù–∞–π–¥–∏—Ç–µ —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ (–æ–±—ã—á–Ω–æ `.env` –∏–ª–∏ `config.py`)

**–†–µ–∑—É–ª—å—Ç–∞—Ç:** –£ –≤–∞—Å –µ—Å—Ç—å –≥–æ—Ç–æ–≤–æ–µ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –±–æ—Ç–∞!

## –ß—Ç–æ –¥–∞–ª—å—à–µ?

–í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –ø–æ–¥–∫–ª—é—á–∏–º —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ –∑–∞–ø—É—Å—Ç–∏–º –µ–≥–æ –≤–ø–µ—Ä–≤—ã–µ. –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç BotFather!',
  1,
  25,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  content = EXCLUDED.content,
  updated_at = NOW();

-- –£—Ä–æ–∫ 2.2: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
INSERT INTO lessons (id, module_id, title, type, content, order_index, estimated_duration, created_at, updated_at)
VALUES (
  85,
  45,
  '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫',
  '# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–∞ –≤ Replit

### –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
–í Replit –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ‚Äî **Secrets**. –≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ, —á–µ–º –ø–∏—Å–∞—Ç—å —Ç–æ–∫–µ–Ω –ø—Ä—è–º–æ –≤ –∫–æ–¥–µ.

### –®–∞–≥ 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ Secret
1. –í –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ –Ω–∞–π–¥–∏—Ç–µ –ø–∞–Ω–µ–ª—å **Secrets** (–∏–∫–æ–Ω–∫–∞ –∑–∞–º–∫–∞)
2. –ù–∞–∂–º–∏—Ç–µ **+ New Secret**
3. **Key:** –≤–≤–µ–¥–∏—Ç–µ `BOT_TOKEN`
4. **Value:** –≤—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –æ—Ç BotFather
5. –ù–∞–∂–º–∏—Ç–µ **Add Secret**

### –®–∞–≥ 2: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ –∫–æ–¥–µ
–í —Ñ–∞–π–ª–µ —Å –±–æ—Ç–æ–º (–æ–±—ã—á–Ω–æ `main.py` –∏–ª–∏ `index.js`) –Ω–∞–π–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É —Å —Ç–æ–∫–µ–Ω–æ–º –∏ –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞:

**–î–ª—è Python:**
```python
import os
TOKEN = os.getenv(''BOT_TOKEN'')
```

**–î–ª—è JavaScript:**
```javascript
const TOKEN = process.env.BOT_TOKEN;
```

## –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
1. –ù–∞–∂–º–∏—Ç–µ **Run** ‚Äî Replit –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –Ω—É–∂–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
2. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –æ—à–∏–±–∫–∏, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª `requirements.txt` –∏–ª–∏ `package.json`

### –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
–í –∫–æ–Ω—Å–æ–ª–∏ –¥–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ:
```
Bot started successfully!
Listening for messages...
```

### –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞
1. –ù–∞–π–¥–∏—Ç–µ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ –≤ Telegram
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É `/start`
3. –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º

## –ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–æ—Ç–∞

### –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–¥ –±–æ—Ç–∞ (Python):
```python
import os
from telegram import Update
from telegram.ext import Application, CommandHandler

TOKEN = os.getenv(''BOT_TOKEN'')

async def start(update: Update, context):
    await update.message.reply_text(''–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–µ—Ä–≤—ã–π –±–æ—Ç!'')

def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.run_polling()

if __name__ == ''__main__'':
    main()
```

### –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–¥ –±–æ—Ç–∞ (JavaScript):
```javascript
const { Telegraf } = require(''telegraf'');
const TOKEN = process.env.BOT_TOKEN;

const bot = new Telegraf(TOKEN);

bot.start((ctx) => {
    ctx.reply(''–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–µ—Ä–≤—ã–π –±–æ—Ç!'');
});

bot.launch();
console.log(''–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!'');
```

## –û—Ç–ª–∞–¥–∫–∞ —á–∞—Å—Ç—ã—Ö –ø—Ä–æ–±–ª–µ–º

### –ü—Ä–æ–±–ª–µ–º–∞: "Invalid token"
**–†–µ—à–µ–Ω–∏–µ:**
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞
- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ Secrets
- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç

### –ü—Ä–æ–±–ª–µ–º–∞: "Module not found"
**–†–µ—à–µ–Ω–∏–µ:**
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ `requirements.txt` –∏–ª–∏ `package.json`
- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

### –ü—Ä–æ–±–ª–µ–º–∞: –ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç
**–†–µ—à–µ–Ω–∏–µ:**
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω
- –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/start`

## –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã 24/7

### Always On –≤ Replit
1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–æ–µ–∫—Ç
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
3. –í–∫–ª—é—á–∏—Ç–µ **Always On** (–≤ –ø–ª–∞—Ç–Ω–æ–º —Ç–∞—Ä–∏—Ñ–µ)

### –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞:
- **UptimeRobot** ‚Äî –≤–Ω–µ—à–Ω–∏–π —Å–µ—Ä–≤–∏—Å –¥–ª—è "–ø–∏–Ω–≥–∞"
- **Cron Jobs** ‚Äî –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫
- **Webhook** –≤–º–µ—Å—Ç–æ polling

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

**–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–≤–æ–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –±–æ—Ç–∞:**

1. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ Secrets
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥ –±–æ—Ç–∞
3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç
4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/start`
5. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç

**–†–µ–∑—É–ª—å—Ç–∞—Ç:** –†–∞–±–æ—Ç–∞—é—â–∏–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã!

## –ß—Ç–æ –¥–∞–ª—å—à–µ?

–í —Å–ª–µ–¥—É—é—â–µ–º –º–æ–¥—É–ª–µ –º—ã –Ω–∞—É—á–∏–º –±–æ—Ç–∞ –ø–æ–Ω–∏–º–∞—Ç—å –±–æ–ª—å—à–µ –∫–æ–º–∞–Ω–¥, —Å–æ–∑–¥–∞–¥–∏–º –º–µ–Ω—é –∏ –¥–æ–±–∞–≤–∏–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏. –í–∞—à –±–æ—Ç —Å—Ç–∞–Ω–µ—Ç –Ω–∞–º–Ω–æ–≥–æ —É–º–Ω–µ–µ!',
  2,
  30,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  content = EXCLUDED.content,
  updated_at = NOW();

-- –ú–æ–¥—É–ª—å 3: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∏ –º–µ–Ω—é
INSERT INTO course_modules (id, course_id, title, description, order_index, created_at, updated_at)
VALUES (
  46,
  10,
  '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∏ –º–µ–Ω—é',
  '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥, –∫–Ω–æ–ø–æ–∫ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é',
  3,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  description = EXCLUDED.description,
  updated_at = NOW();

-- –£—Ä–æ–∫ 3.1: –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
INSERT INTO lessons (id, module_id, title, type, content, order_index, estimated_duration, created_at, updated_at)
VALUES (
  86,
  46,
  '–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞',
  '# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞

## –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–∞–Ω–¥ –≤ Telegram

–ö–æ–º–∞–Ω–¥—ã ‚Äî —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å —Å–∏–º–≤–æ–ª–∞ `/`. –û–Ω–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±—ã—Å—Ç—Ä–æ –ø–æ–ª—É—á–∏—Ç—å –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ.

### –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
- `/start` ‚Äî –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è)
- `/help` ‚Äî —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
- `/about` ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
- `/settings` ‚Äî –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

### –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:
- `/weather` ‚Äî –ø–æ–≥–æ–¥–∞
- `/news` ‚Äî –Ω–æ–≤–æ—Å—Ç–∏
- `/order` ‚Äî —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑
- `/contact` ‚Äî –∫–æ–Ω—Ç–∞–∫—Ç—ã

## –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /help

### –ö–æ–¥ –¥–ª—è Python:
```python
async def help_command(update: Update, context):
    help_text = """
ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
/about - –û –±–æ—Ç–µ
/contact - –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã
/weather - –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞

‚ùì –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º!
    """
    await update.message.reply_text(help_text)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
app.add_handler(CommandHandler("help", help_command))
```

### –ö–æ–¥ –¥–ª—è JavaScript:
```javascript
bot.help((ctx) => {
    const helpText = `
ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
/about - –û –±–æ—Ç–µ
/contact - –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã
/weather - –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞

‚ùì –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º!
    `;
    ctx.reply(helpText);
});
```

## –ö–æ–º–∞–Ω–¥–∞ /about

```python
async def about_command(update: Update, context):
    about_text = """
‚ÑπÔ∏è –û –±–æ—Ç–µ:

–Ø —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –≤–∞—à–µ–π –∂–∏–∑–Ω–∏!

üìÖ –í–µ—Ä—Å–∏—è: 1.0
üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –í–∞—à–µ –∏–º—è
üöÄ –°–æ–∑–¥–∞–Ω –Ω–∞ –∫—É—Ä—Å–µ NovaAI University

–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚úÖ –û—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
‚úÖ –ü–æ–º–æ–≥–∞—é —Å –∑–∞–∫–∞–∑–∞–º–∏
‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚úÖ –†–∞–∑–≤–ª–µ–∫–∞—é –∏ –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É—é
    """
    await update.message.reply_text(about_text)

app.add_handler(CommandHandler("about", about_command))
```

## –ö–æ–º–∞–Ω–¥–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏

### –ü–æ–≥–æ–¥–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞:
```python
async def weather_command(update: Update, context):
    # –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ–¥ –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–∞–Ω–¥—ã
    if context.args:
        city = '' ''.join(context.args)
        weather_text = f"üå§ –ü–æ–≥–æ–¥–∞ –≤ {city}:\\n\\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: +22¬∞C\\nüí® –í–µ—Ç–µ—Ä: 5 –º/—Å\\n‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ"
    else:
        weather_text = "üìç –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥: /weather –ú–æ—Å–∫–≤–∞"
    
    await update.message.reply_text(weather_text)

app.add_handler(CommandHandler("weather", weather_command))
```

## –ö–æ–º–∞–Ω–¥–∞ —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏

### –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏:
```python
async def logo_command(update: Update, context):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –ø–æ–¥–ø–∏—Å—å—é
    photo_url = "https://example.com/logo.png"
    caption = "üì∏ –õ–æ–≥–æ—Ç–∏–ø –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏"
    
    await update.message.reply_photo(
        photo=photo_url,
        caption=caption
    )

app.add_handler(CommandHandler("logo", logo_command))
```

## –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥

```python
async def unknown_command(update: Update, context):
    await update.message.reply_text(
        "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!\\n\\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
    )

# –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º
app.add_handler(MessageHandler(filters.COMMAND, unknown_command))
```

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ –≤ BotFather

### –®–∞–≥ 1: –û—Ç–∫—Ä–æ–π—Ç–µ BotFather
1. –ù–∞–π–¥–∏—Ç–µ @BotFather –≤ Telegram
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É `/setcommands`
3. –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞

### –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã
–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
```
start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
about - –û –±–æ—Ç–µ
weather - –ü–æ–≥–æ–¥–∞
contact - –ö–æ–Ω—Ç–∞–∫—Ç—ã
```

### –†–µ–∑—É–ª—å—Ç–∞—Ç:
–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—è–≤–∏—Ç—Å—è —É–¥–æ–±–Ω–æ–µ –º–µ–Ω—é —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ —Ä—è–¥–æ–º —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞!

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã

### –•–æ—Ä–æ—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏:
- ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
- ‚úÖ –î–µ–ª–∞–π—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–µ, –ø–æ–Ω—è—Ç–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è
- ‚úÖ –î–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ –æ—Ç–≤–µ—Ç–∞—Ö
- ‚úÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

### –ß–µ–≥–æ –∏–∑–±–µ–≥–∞—Ç—å:
- ‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
- ‚ùå –°–ª–æ–∂–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π
- ‚ùå –ö–æ–º–∞–Ω–¥ –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

**–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞:**

1. –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/help` —Å–æ —Å–ø–∏—Å–∫–æ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
2. –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É `/about` —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±–æ—Ç–µ
3. –°–¥–µ–ª–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/contact` —Å –≤–∞—à–∏–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ BotFather
5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã

**–†–µ–∑—É–ª—å—Ç–∞—Ç:** –ë–æ—Ç —Å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–º –Ω–∞–±–æ—Ä–æ–º –∫–æ–º–∞–Ω–¥ –∏ –º–µ–Ω—é!

## –ß—Ç–æ –¥–∞–ª—å—à–µ?

–í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –¥–æ–±–∞–≤–∏–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–¥–µ–ª–∞—é—Ç –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º –µ—â–µ —É–¥–æ–±–Ω–µ–µ. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤–º–µ—Å—Ç–æ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥!',
  1,
  35,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  content = EXCLUDED.content,
  updated_at = NOW();

-- –£—Ä–æ–∫ 3.2: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
INSERT INTO lessons (id, module_id, title, type, content, order_index, estimated_duration, created_at, updated_at)
VALUES (
  87,
  46,
  '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã',
  '# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

## –¢–∏–ø—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä –≤ Telegram

### 1. Reply Keyboard (–æ–±—ã—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞)
–ö–Ω–æ–ø–∫–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è –≤–º–µ—Å—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç —Ç–µ–∫—Å—Ç.

### 2. Inline Keyboard (–≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞)
–ö–Ω–æ–ø–∫–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è—é—Ç—Å—è –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é. –ú–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.

## –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

### Python –∫–æ–¥:
```python
from telegram import ReplyKeyboardMarkup, KeyboardButton

async def start_with_keyboard(update: Update, context):
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = [
        [KeyboardButton("üìã –ú–µ–Ω—é"), KeyboardButton("‚ÑπÔ∏è –û –Ω–∞—Å")],
        [KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"), KeyboardButton("‚ùì –ü–æ–º–æ—â—å")],
        [KeyboardButton("üå§ –ü–æ–≥–æ–¥–∞")]
    ]
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    reply_markup = ReplyKeyboardMarkup(
        keyboard, 
        resize_keyboard=True,  # –ü–æ–¥–≥–æ–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ä
        one_time_keyboard=False  # –ù–µ —Å–∫—Ä—ã–≤–∞—Ç—å –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    )
    
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup
    )

app.add_handler(CommandHandler("start", start_with_keyboard))
```

### JavaScript –∫–æ–¥:
```javascript
const { Markup } = require(''telegraf'');

bot.start((ctx) => {
    const keyboard = Markup.keyboard([
        [''üìã –ú–µ–Ω—é'', ''‚ÑπÔ∏è –û –Ω–∞—Å''],
        [''üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã'', ''‚ùì –ü–æ–º–æ—â—å''],
        [''üå§ –ü–æ–≥–æ–¥–∞'']
    ]).resize();
    
    ctx.reply(''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:'', keyboard);
});
```

## –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫

### Python –∫–æ–¥:
```python
from telegram import Update
from telegram.ext import MessageHandler, filters

async def handle_buttons(update: Update, context):
    text = update.message.text
    
    if text == "üìã –ú–µ–Ω—é":
        await update.message.reply_text("üçΩ –ù–∞—à–µ –º–µ–Ω—é:\\n\\nüçï –ü–∏—Ü—Ü–∞ - 500‚ÇΩ\\nüçî –ë—É—Ä–≥–µ—Ä - 300‚ÇΩ\\nü•ó –°–∞–ª–∞—Ç - 250‚ÇΩ")
    
    elif text == "‚ÑπÔ∏è –û –Ω–∞—Å":
        await update.message.reply_text("üè¢ –ú—ã –ª—É—á—à–∏–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω –≤ –≥–æ—Ä–æ–¥–µ!\\n‚≠ê –†–∞–±–æ—Ç–∞–µ–º —Å 2020 –≥–æ–¥–∞")
    
    elif text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        await update.message.reply_text("üì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67\\nüìß Email: info@restaurant.ru")
    
    elif text == "‚ùì –ü–æ–º–æ—â—å":
        await update.message.reply_text("‚ùì –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å?\\n\\n‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é\\n‚Ä¢ –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑\\n‚Ä¢ –£–∑–Ω–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã")
    
    elif text == "üå§ –ü–æ–≥–æ–¥–∞":
        await update.message.reply_text("üå§ –°–µ–≥–æ–¥–Ω—è: +22¬∞C, —Å–æ–ª–Ω–µ—á–Ω–æ\\n‚òÅÔ∏è –ó–∞–≤—Ç—Ä–∞: +18¬∞C, –æ–±–ª–∞—á–Ω–æ")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_buttons))
```

## –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ (Inline)

### –°–æ–∑–¥–∞–Ω–∏–µ inline –∫–Ω–æ–ø–æ–∫:
```python
from telegram import InlineKeyboardButton, InlineKeyboardMarkup

async def show_inline_menu(update: Update, context):
    keyboard = [
        [InlineKeyboardButton("üõí –ó–∞–∫–∞–∑–∞—Ç—å", callback_data=''order'')],
        [InlineKeyboardButton("üìã –ö–∞—Ç–∞–ª–æ–≥", callback_data=''catalog''),
         InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∞", callback_data=''payment'')],
        [InlineKeyboardButton("üîó –ù–∞—à —Å–∞–π—Ç", url=''https://restaurant.ru'')]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üè™ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω!",
        reply_markup=reply_markup
    )

app.add_handler(CommandHandler("shop", show_inline_menu))
```

### –û–±—Ä–∞–±–æ—Ç–∫–∞ inline –∫–Ω–æ–ø–æ–∫:
```python
from telegram.ext import CallbackQueryHandler

async def handle_inline_buttons(update: Update, context):
    query = update.callback_query
    await query.answer()  # –£–±–∏—Ä–∞–µ—Ç "–∑–∞–≥—Ä—É–∑–∫—É" –Ω–∞ –∫–Ω–æ–ø–∫–µ
    
    if query.data == ''order'':
        await query.edit_message_text(
            "üõí –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞:\\n\\n1. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä\\n2. –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ\\n3. –û–ø–ª–∞—Ç–∏—Ç–µ"
        )
    
    elif query.data == ''catalog'':
        keyboard = [
            [InlineKeyboardButton("üçï –ü–∏—Ü—Ü–∞", callback_data=''pizza'')],
            [InlineKeyboardButton("üçî –ë—É—Ä–≥–µ—Ä—ã", callback_data=''burgers'')],
            [InlineKeyboardButton("ü•ó –°–∞–ª–∞—Ç—ã", callback_data=''salads'')],
            [InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data=''back'')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            "üìã –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
            reply_markup=reply_markup
        )
    
    elif query.data == ''payment'':
        await query.edit_message_text(
            "üí≥ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:\\n\\nüí∞ –ù–∞–ª–∏—á–Ω—ã–µ\\nüí≥ –ö–∞—Ä—Ç–∞\\nüì± –°–ë–ü\\nüíº –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞"
        )

app.add_handler(CallbackQueryHandler(handle_inline_buttons))
```

## –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

### –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö:
```python
# –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
products = [
    {"name": "üçï –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "price": 450},
    {"name": "üçï –ü–µ–ø–ø–µ—Ä–æ–Ω–∏", "price": 520},
    {"name": "üçï 4 —Å—ã—Ä–∞", "price": 580}
]

async def show_products(update: Update, context):
    keyboard = []
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    for i, product in enumerate(products):
        button_text = f"{product[''name'']} - {product[''price'']}‚ÇΩ"
        keyboard.append([InlineKeyboardButton(button_text, callback_data=f''product_{i}'')])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üõí –í—ã–±–µ—Ä–∏—Ç–µ –ø–∏—Ü—Ü—É:",
        reply_markup=reply_markup
    )
```

## –ü–æ–ª–µ–∑–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä

### –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:
```python
from telegram import ReplyKeyboardRemove

await update.message.reply_text(
    "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∞!",
    reply_markup=ReplyKeyboardRemove()
)
```

### –ö–Ω–æ–ø–∫–∞ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º":
```python
keyboard = [
    [KeyboardButton("üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)],
    [KeyboardButton("üìç –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ª–æ–∫–∞—Ü–∏–µ–π", request_location=True)]
]
```

### –ö–Ω–æ–ø–∫–∞ —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º:
```python
from telegram import WebAppInfo

keyboard = [
    [InlineKeyboardButton("üåê –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω", web_app=WebAppInfo("https://shop.ru"))]
]
```

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

**–°–æ–∑–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –±–æ—Ç–∞:**

1. –î–æ–±–∞–≤—å—Ç–µ —Å—Ç–∞—Ä—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏
2. –°–æ–∑–¥–∞–π—Ç–µ –º–µ–Ω—é —Å inline –∫–Ω–æ–ø–∫–∞–º–∏
3. –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
4. –°–¥–µ–ª–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —É–¥–æ–±—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- –î–æ–±–∞–≤—å—Ç–µ –∫–Ω–æ–ø–∫—É —Å –≤–Ω–µ—à–Ω–µ–π —Å—Å—ã–ª–∫–æ–π
- –°–æ–∑–¥–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
- –°–¥–µ–ª–∞–π—Ç–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –º–µ–Ω—é

**–†–µ–∑—É–ª—å—Ç–∞—Ç:** –£–¥–æ–±–Ω—ã–π –±–æ—Ç —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏!

## –ß—Ç–æ –¥–∞–ª—å—à–µ?

–í —Å–ª–µ–¥—É—é—â–µ–º –º–æ–¥—É–ª–µ –º—ã –Ω–∞—É—á–∏–º—Å—è –ø–æ–¥–∫–ª—é—á–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã –∏ API –∫ –Ω–∞—à–µ–º—É –±–æ—Ç—É. –û–Ω —Å–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ, –Ω–æ–≤–æ—Å—Ç—è—Ö, –∫—É—Ä—Å–∞—Ö –≤–∞–ª—é—Ç –∏ –º–Ω–æ–≥–æ–º –¥—Ä—É–≥–æ–º!',
  2,
  40,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  content = EXCLUDED.content,
  updated_at = NOW();

-- –ú–æ–¥—É–ª—å 4: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
INSERT INTO course_modules (id, course_id, title, description, order_index, created_at, updated_at)
VALUES (
  47,
  10,
  '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è',
  '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ API',
  4,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  description = EXCLUDED.description,
  updated_at = NOW();

-- –£—Ä–æ–∫ 4.1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥–Ω–æ–≥–æ API
INSERT INTO lessons (id, module_id, title, type, content, order_index, estimated_duration, created_at, updated_at)
VALUES (
  88,
  47,
  '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥–Ω–æ–≥–æ API',
  '# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥–Ω–æ–≥–æ API

## –í—ã–±–æ—Ä –ø–æ–≥–æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ API. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ª—É—á—à–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:

### 1. OpenWeatherMap
- ‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ: 1000 –∑–∞–ø—Ä–æ—Å–æ–≤/–¥–µ–Ω—å
- ‚úÖ –ü—Ä–æ—Å—Ç–æ–π API
- ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
- üåê openweathermap.org

### 2. WeatherAPI
- ‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ: 1000 –∑–∞–ø—Ä–æ—Å–æ–≤/–¥–µ–Ω—å
- ‚úÖ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
- üåê weatherapi.com

## –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ OpenWeatherMap

### –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ openweathermap.org
2. –ù–∞–∂–º–∏—Ç–µ **Sign Up**
3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
4. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email

### –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ API –∫–ª—é—á–∞
1. –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ **API keys**
3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä)
4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ Replit Secrets –∫–∞–∫ `WEATHER_API_KEY`

## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API

### –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã API:
–û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:
```
https://api.openweathermap.org/data/2.5/weather?q=Moscow&appid=YOUR_API_KEY&units=metric&lang=ru
```

–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ.

## –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–≥–æ–¥–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏

### Python –∫–æ–¥:
```python
import os
import requests
import json

WEATHER_API_KEY = os.getenv(''WEATHER_API_KEY'')

async def get_weather(city):
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞"""
    try:
        # URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
        url = f"https://api.openweathermap.org/data/2.5/weather"
        params = {
            ''q'': city,
            ''appid'': WEATHER_API_KEY,
            ''units'': ''metric'',  # –¶–µ–ª—å—Å–∏–π
            ''lang'': ''ru''        # –†—É—Å—Å–∫–∏–π —è–∑—ã–∫
        }
        
        # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å
        response = requests.get(url, params=params)
        
        if response.status_code == 200:
            data = response.json()
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            temp = data[''main''][''temp'']
            feels_like = data[''main''][''feels_like'']
            description = data[''weather''][0][''description'']
            humidity = data[''main''][''humidity'']
            wind_speed = data[''wind''][''speed'']
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            weather_text = f"""
üå§ –ü–æ–≥–æ–¥–∞ –≤ {city}:

üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)
‚òÅÔ∏è {description.title()}
üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%
üí® –í–µ—Ç–µ—Ä: {wind_speed} –º/—Å
            """
            
            return weather_text.strip()
            
        elif response.status_code == 404:
            return f"‚ùå –ì–æ—Ä–æ–¥ ''{city}'' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ."
        else:
            return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ."
            
    except Exception as e:
        return f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
async def weather_command(update: Update, context):
    if context.args:
        city = '' ''.join(context.args)
        weather_info = await get_weather(city)
        await update.message.reply_text(weather_info)
    else:
        await update.message.reply_text(
            "üìç –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã:\\n"
            "–ü—Ä–∏–º–µ—Ä: /weather –ú–æ—Å–∫–≤–∞"
        )

app.add_handler(CommandHandler("weather", weather_command))
```

### JavaScript –∫–æ–¥:
```javascript
const axios = require(''axios'');

const WEATHER_API_KEY = process.env.WEATHER_API_KEY;

async function getWeather(city) {
    try {
        const url = `https://api.openweathermap.org/data/2.5/weather`;
        const params = {
            q: city,
            appid: WEATHER_API_KEY,
            units: ''metric'',
            lang: ''ru''
        };
        
        const response = await axios.get(url, { params });
        const data = response.data;
        
        const temp = data.main.temp;
        const feelsLike = data.main.feels_like;
        const description = data.weather[0].description;
        const humidity = data.main.humidity;
        const windSpeed = data.wind.speed;
        
        return `üå§ –ü–æ–≥–æ–¥–∞ –≤ ${city}:

üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${feelsLike}¬∞C)
‚òÅÔ∏è ${description}
üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${humidity}%
üí® –í–µ—Ç–µ—Ä: ${windSpeed} –º/—Å`;
        
    } catch (error) {
        if (error.response && error.response.status === 404) {
            return `‚ùå –ì–æ—Ä–æ–¥ ''${city}'' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.`;
        }
        return `‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.`;
    }
}

bot.command(''weather'', async (ctx) => {
    const args = ctx.message.text.split('' '').slice(1);
    
    if (args.length > 0) {
        const city = args.join('' '');
        const weatherInfo = await getWeather(city);
        ctx.reply(weatherInfo);
    } else {
        ctx.reply(''üìç –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã:\\n–ü—Ä–∏–º–µ—Ä: /weather –ú–æ—Å–∫–≤–∞'');
    }
});
```

## –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–≥–æ–¥—ã

### –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É:
```python
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üå§ –ü–æ–≥–æ–¥–∞"
async def handle_weather_button(update: Update, context):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏
    keyboard = [
        [KeyboardButton("üèô –ú–æ—Å–∫–≤–∞"), KeyboardButton("üèõ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥")],
        [KeyboardButton("üåä –°–æ—á–∏"), KeyboardButton("üèî –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥")],
        [KeyboardButton("‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –≥–æ—Ä–æ–¥"), KeyboardButton("‚Üê –ù–∞–∑–∞–¥")]
    ]
    
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    await update.message.reply_text(
        "üå§ –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π:",
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
async def handle_city_selection(update: Update, context):
    text = update.message.text
    
    if text in ["üèô –ú–æ—Å–∫–≤–∞", "üèõ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "üåä –°–æ—á–∏", "üèî –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"]:
        # –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –∏ –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
        city = text.split('' '', 1)[1]
        weather_info = await get_weather(city)
        await update.message.reply_text(weather_info)
    
    elif text == "‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –≥–æ—Ä–æ–¥":
        await update.message.reply_text(
            "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:"
        )
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞
        context.user_data[''waiting_for_city''] = True
```

## –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π

### –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞:
```python
async def get_forecast(city, days=3):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π"""
    try:
        url = f"https://api.openweathermap.org/data/2.5/forecast"
        params = {
            ''q'': city,
            ''appid'': WEATHER_API_KEY,
            ''units'': ''metric'',
            ''lang'': ''ru''
        }
        
        response = requests.get(url, params=params)
        
        if response.status_code == 200:
            data = response.json()
            
            forecast_text = f"üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ {city}:\\n\\n"
            
            # –ë–µ—Ä–µ–º –ø—Ä–æ–≥–Ω–æ–∑ —á–µ—Ä–µ–∑ –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞ (8 –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –ø–æ 3 —á–∞—Å–∞)
            for i in range(0, min(days * 8, len(data[''list''])), 8):
                item = data[''list''][i]
                
                # –î–∞—Ç–∞
                date = item[''dt_txt''].split('' '')[0]
                temp = item[''main''][''temp'']
                description = item[''weather''][0][''description'']
                
                forecast_text += f"üìÖ {date}: {temp}¬∞C, {description}\\n"
            
            return forecast_text
            
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞: {str(e)}"

# –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞
async def forecast_command(update: Update, context):
    if context.args:
        city = '' ''.join(context.args)
        forecast_info = await get_forecast(city)
        await update.message.reply_text(forecast_info)
    else:
        await update.message.reply_text(
            "üìÖ –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞:\\n"
            "–ü—Ä–∏–º–µ—Ä: /forecast –ú–æ—Å–∫–≤–∞"
        )

app.add_handler(CommandHandler("forecast", forecast_command))
```

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

**–î–æ–±–∞–≤—å—Ç–µ –ø–æ–≥–æ–¥–Ω–æ–≥–æ –±–æ—Ç–∞:**

1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ OpenWeatherMap
2. –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ Secrets
3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
4. –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É `/weather`
5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–Ω—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏
6. –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ–≥–Ω–æ–∑–∞ `/forecast`
- –î–æ–±–∞–≤—å—Ç–µ –∫–Ω–æ–ø–∫–∏ —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏
- –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª—é–±–∏–º–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

**–†–µ–∑—É–ª—å—Ç–∞—Ç:** –ë–æ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–≥–æ–¥–µ!

## –ß—Ç–æ –¥–∞–ª—å—à–µ?

–í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –¥–æ–±–∞–≤–∏–º –µ—â–µ –±–æ–ª—å—à–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π: –Ω–æ–≤–æ—Å—Ç–∏, –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç, –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ –∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã. –í–∞—à –±–æ—Ç —Å—Ç–∞–Ω–µ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º!',
  1,
  45,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  content = EXCLUDED.content,
  updated_at = NOW();

-- –£—Ä–æ–∫ 4.2: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –Ω–æ–≤–æ—Å—Ç–Ω—ã–º–∏ API –∏ –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
INSERT INTO lessons (id, module_id, title, type, content, order_index, estimated_duration, created_at, updated_at)
VALUES (
  89,
  47,
  '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –Ω–æ–≤–æ—Å—Ç–Ω—ã–º–∏ API –∏ –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏',
  '# –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –Ω–æ–≤–æ—Å—Ç–Ω—ã–º–∏ API –∏ –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏

## –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ API

### –ù–æ–≤–æ—Å—Ç–∏:
- **NewsAPI** ‚Äî –Ω–æ–≤–æ—Å—Ç–∏ —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞
- **News.ru API** ‚Äî —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
- **–†–ë–ö API** ‚Äî —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏

### –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç:
- **ExchangeRate-API** ‚Äî –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç
- **Fixer.io** ‚Äî –≤–∞–ª—é—Ç–Ω—ã–µ –∫—É—Ä—Å—ã
- **–¶–ë –†–§ API** ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã

### –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫:
- **Google Translate API** ‚Äî –º–∞—à–∏–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥
- **MyMemory** ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫
- **–Ø–Ω–¥–µ–∫—Å.–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫** ‚Äî API –Ø–Ω–¥–µ–∫—Å–∞

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ API

### –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ NewsAPI:
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ newsapi.org
2. –ù–∞–∂–º–∏—Ç–µ **Get API Key**
3. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
4. –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ Secrets –∫–∞–∫ `NEWS_API_KEY`

### –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π:
```python
import requests
import os

NEWS_API_KEY = os.getenv(''NEWS_API_KEY'')

async def get_news(country=''ru'', category=''general'', count=5):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏"""
    try:
        url = "https://newsapi.org/v2/top-headlines"
        params = {
            ''country'': country,
            ''category'': category,
            ''pageSize'': count,
            ''apiKey'': NEWS_API_KEY
        }
        
        response = requests.get(url, params=params)
        
        if response.status_code == 200:
            data = response.json()
            articles = data[''articles'']
            
            if not articles:
                return "üì∞ –ù–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞ –Ω–µ—Ç."
            
            news_text = f"üì∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ ({category}):\\n\\n"
            
            for i, article in enumerate(articles[:count], 1):
                title = article[''title'']
                description = article[''description''] or ''–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ''
                url = article[''url'']
                
                # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –æ–ø–∏—Å–∞–Ω–∏—è
                if len(description) > 100:
                    description = description[:100] + "..."
                
                news_text += f"{i}. **{title}**\\n"
                news_text += f"   {description}\\n"
                news_text += f"   üîó [–ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é]({url})\\n\\n"
            
            return news_text
            
        else:
            return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π."
            
    except Exception as e:
        return f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"

# –ö–æ–º–∞–Ω–¥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
async def news_command(update: Update, context):
    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    category = ''general''
    if context.args:
        category = context.args[0].lower()
    
    news_info = await get_news(category=category)
    
    await update.message.reply_text(
        news_info,
        parse_mode=''Markdown'',
        disable_web_page_preview=True
    )

app.add_handler(CommandHandler("news", news_command))
```

## –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é –Ω–æ–≤–æ—Å—Ç–µ–π

### –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–æ–≤–æ—Å—Ç–µ–π:
```python
async def news_menu(update: Update, context):
    keyboard = [
        [InlineKeyboardButton("üì∞ –û–±—â–∏–µ", callback_data=''news_general''),
         InlineKeyboardButton("üíº –ë–∏–∑–Ω–µ—Å", callback_data=''news_business'')],
        [InlineKeyboardButton("‚öΩ –°–ø–æ—Ä—Ç", callback_data=''news_sports''),
         InlineKeyboardButton("üî¨ –ù–∞—É–∫–∞", callback_data=''news_science'')],
        [InlineKeyboardButton("üíª –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", callback_data=''news_technology''),
         InlineKeyboardButton("üé¨ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", callback_data=''news_entertainment'')]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üì∞ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–æ–≤–æ—Å—Ç–µ–π:",
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async def handle_news_category(update: Update, context):
    query = update.callback_query
    await query.answer()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ callback_data
    category = query.data.replace(''news_'', '''')
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    news_info = await get_news(category=category)
    
    await query.edit_message_text(
        news_info,
        parse_mode=''Markdown''
    )

app.add_handler(CommandHandler("newsmenu", news_menu))
app.add_handler(CallbackQueryHandler(handle_news_category, pattern=''^news_''))
```

## –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç

### –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π API –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç:
```python
async def get_exchange_rates():
    """–ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç"""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π API –±–µ–∑ –∫–ª—é—á–∞
        url = "https://api.exchangerate-api.com/v4/latest/RUB"
        
        response = requests.get(url)
        
        if response.status_code == 200:
            data = response.json()
            rates = data[''rates'']
            
            # –û–±—Ä–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ã (—Å–∫–æ–ª—å–∫–æ —Ä—É–±–ª–µ–π –∑–∞ 1 –µ–¥–∏–Ω–∏—Ü—É –≤–∞–ª—é—Ç—ã)
            usd_rate = 1 / rates[''USD'']
            eur_rate = 1 / rates[''EUR'']
            cny_rate = 1 / rates[''CNY'']
            
            rates_text = f"""
üí± –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç (–¶–ë –†–§):

üíµ USD: {usd_rate:.2f} ‚ÇΩ
üí∂ EUR: {eur_rate:.2f} ‚ÇΩ
üá®üá≥ CNY: {cny_rate:.2f} ‚ÇΩ

üìÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {data[''date'']}
            """
            
            return rates_text.strip()
            
        else:
            return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç."
            
    except Exception as e:
        return f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"

async def rates_command(update: Update, context):
    rates_info = await get_exchange_rates()
    await update.message.reply_text(rates_info)

app.add_handler(CommandHandler("rates", rates_command))
```

## –ü—Ä–æ—Å—Ç–æ–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫

### –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ —á–µ—Ä–µ–∑ MyMemory API:
```python
async def translate_text(text, from_lang=''auto'', to_lang=''ru''):
    """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç —Å –æ–¥–Ω–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ –¥—Ä—É–≥–æ–π"""
    try:
        url = "https://api.mymemory.translated.net/get"
        params = {
            ''q'': text,
            ''langpair'': f"{from_lang}|{to_lang}"
        }
        
        response = requests.get(url, params=params)
        
        if response.status_code == 200:
            data = response.json()
            translated = data[''responseData''][''translatedText'']
            
            return f"üî§ –ü–µ—Ä–µ–≤–æ–¥:\\n\\nüìù –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: {text}\\n‚úÖ –ü–µ—Ä–µ–≤–æ–¥: {translated}"
            
        else:
            return "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞."
            
    except Exception as e:
        return f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"

async def translate_command(update: Update, context):
    if context.args:
        text_to_translate = '' ''.join(context.args)
        translation = await translate_text(text_to_translate)
        await update.message.reply_text(translation)
    else:
        await update.message.reply_text(
            "üî§ –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞:\\n"
            "–ü—Ä–∏–º–µ—Ä: /translate Hello world"
        )

app.add_handler(CommandHandler("translate", translate_command))
```

## –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä QR-–∫–æ–¥–æ–≤

### QR-–∫–æ–¥ —á–µ—Ä–µ–∑ API:
```python
async def generate_qr_command(update: Update, context):
    if context.args:
        text = '' ''.join(context.args)
        
        # –°–æ–∑–¥–∞–µ–º QR-–∫–æ–¥ —á–µ—Ä–µ–∑ API
        qr_url = f"https://api.qrserver.com/v1/create-qr-code/?size=300x300&data={text}"
        
        await update.message.reply_photo(
            photo=qr_url,
            caption=f"üì± QR-–∫–æ–¥ –¥–ª—è: {text}"
        )
    else:
        await update.message.reply_text(
            "üì± –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è QR-–∫–æ–¥–∞:\\n"
            "–ü—Ä–∏–º–µ—Ä: /qr https://google.com"
        )

app.add_handler(CommandHandler("qr", generate_qr_command))
```

## –°–ª—É—á–∞–π–Ω—ã–µ —Ñ–∞–∫—Ç—ã

### API —Å–ª—É—á–∞–π–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤:
```python
async def random_fact_command(update: Update, context):
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º API —Å–ª—É—á–∞–π–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤
        url = "https://uselessfacts.jsph.pl/random.json?language=en"
        
        response = requests.get(url)
        
        if response.status_code == 200:
            data = response.json()
            fact = data[''text'']
            
            # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Ñ–∞–∫—Ç –Ω–∞ —Ä—É—Å—Å–∫–∏–π
            translated_fact = await translate_text(fact, ''en'', ''ru'')
            
            await update.message.reply_text(f"üß† –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç:\\n\\n{translated_fact}")
        else:
            await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç.")
            
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

app.add_handler(CommandHandler("fact", random_fact_command))
```

## –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –º–µ–Ω—é —Å–µ—Ä–≤–∏—Å–æ–≤

### –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é:
```python
async def services_menu(update: Update, context):
    keyboard = [
        [InlineKeyboardButton("üì∞ –ù–æ–≤–æ—Å—Ç–∏", callback_data=''service_news''),
         InlineKeyboardButton("üå§ –ü–æ–≥–æ–¥–∞", callback_data=''service_weather'')],
        [InlineKeyboardButton("üí± –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç", callback_data=''service_rates''),
         InlineKeyboardButton("üî§ –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫", callback_data=''service_translate'')],
        [InlineKeyboardButton("üì± QR-–∫–æ–¥", callback_data=''service_qr''),
         InlineKeyboardButton("üß† –§–∞–∫—Ç", callback_data=''service_fact'')]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üõ† –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å:",
        reply_markup=reply_markup
    )

async def handle_service_selection(update: Update, context):
    query = update.callback_query
    await query.answer()
    
    service = query.data.replace(''service_'', '''')
    
    if service == ''news'':
        await news_menu(query, context)
    elif service == ''weather'':
        await query.edit_message_text("üå§ –í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥: /weather –ú–æ—Å–∫–≤–∞")
    elif service == ''rates'':
        rates_info = await get_exchange_rates()
        await query.edit_message_text(rates_info)
    elif service == ''translate'':
        await query.edit_message_text("üî§ –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç: /translate Hello")
    elif service == ''qr'':
        await query.edit_message_text("üì± –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç: /qr https://google.com")
    elif service == ''fact'':
        await random_fact_command(query, context)

app.add_handler(CommandHandler("services", services_menu))
app.add_handler(CallbackQueryHandler(handle_service_selection, pattern=''^service_''))
```

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

**–°–æ–∑–¥–∞–π—Ç–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞-–ø–æ–º–æ—â–Ω–∏–∫–∞:**

1. –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ—Å—Ç–Ω–æ–π —Å–µ—Ä–≤–∏—Å —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
2. –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç
3. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç–æ–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫
4. –î–æ–±–∞–≤—å—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä QR-–∫–æ–¥–æ–≤
5. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ–Ω—é –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
6. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- –î–æ–±–∞–≤—å—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
- –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è
- –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ API –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤
- –î–æ–±–∞–≤—å—Ç–µ –ø–æ–∏—Å–∫ –ø–æ Wikipedia

**–†–µ–∑—É–ª—å—Ç–∞—Ç:** –ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –ø–æ–ª–µ–∑–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤!

## –ß—Ç–æ –¥–∞–ª—å—à–µ?

–í —Å–ª–µ–¥—É—é—â–µ–º –º–æ–¥—É–ª–µ –º—ã –∏–∑—É—á–∏–º –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—é –±–æ—Ç–∞: –ø—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–µ–π, –ø–æ–¥–ø–∏—Å–∫–∏, —Ä–µ–∫–ª–∞–º—É –∏ –¥—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –≤–∞—à–µ–º –±–æ—Ç–µ. –ü—Ä–µ–≤—Ä–∞—Ç–∏–º —Ö–æ–±–±–∏ –≤ –±–∏–∑–Ω–µ—Å!',
  2,
  50,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  content = EXCLUDED.content,
  updated_at = NOW();

-- –ú–æ–¥—É–ª—å 5: –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
INSERT INTO course_modules (id, course_id, title, description, order_index, created_at, updated_at)
VALUES (
  48,
  10,
  '–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ',
  '–ó–∞—Ä–∞–±–æ—Ç–æ–∫ –Ω–∞ –±–æ—Ç–µ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ',
  5,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  description = EXCLUDED.description,
  updated_at = NOW();

-- –£—Ä–æ–∫ 5.1: –ü—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–µ–π —á–µ—Ä–µ–∑ –±–æ—Ç–∞
INSERT INTO lessons (id, module_id, title, type, content, order_index, estimated_duration, created_at, updated_at)
VALUES (
  90,
  48,
  '–ü—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–µ–π —á–µ—Ä–µ–∑ –±–æ—Ç–∞',
  '# –ü—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–µ–π —á–µ—Ä–µ–∑ –±–æ—Ç–∞

## –°–ø–æ—Å–æ–±—ã –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–æ–≤

### 1. –ü—Ä—è–º—ã–µ –ø–ª–∞—Ç–µ–∂–∏
- **Telegram Payments** ‚Äî –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–ø–ª–∞—Ç—ã
- **–ÆMoney (–Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∏)** ‚Äî —Ä–æ—Å—Å–∏–π—Å–∫–∏–π –ø–ª–∞—Ç–µ–∂–Ω—ã–π —Å–µ—Ä–≤–∏—Å  
- **QIWI** ‚Äî —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏
- **–°–±–µ—Ä–±–∞–Ω–∫ API** ‚Äî –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –ø–ª–∞—Ç–µ–∂–∏

### 2. –ü–æ–¥–ø–∏—Å–æ—á–Ω–∞—è –º–æ–¥–µ–ª—å
- –ú–µ—Å—è—á–Ω—ã–µ/–≥–æ–¥–æ–≤—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏
- –ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏
- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

### 3. –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
- –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏
- –ö–æ–º–∏—Å—Å–∏–∏ —Å –ø—Ä–æ–¥–∞–∂
- –†–µ–∫–ª–∞–º–∞ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Payments

### –®–∞–≥ 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
1. –û—Ç–∫—Ä–æ–π—Ç–µ @BotFather
2. –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞
3. –ù–∞–∂–º–∏—Ç–µ **Payments**
4. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ÆMoney)
5. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞

### –®–∞–≥ 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ –ø—Ä–æ–µ–∫—Ç
–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤ Replit Secrets –∫–∞–∫ `PAYMENT_TOKEN`

## –°–æ–∑–¥–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –≤ –±–æ—Ç–µ

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤:
```python
# –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
PRODUCTS = {
    ''premium_month'': {
        ''title'': ''üî• –ü—Ä–µ–º–∏—É–º –Ω–∞ –º–µ—Å—è—Ü'',
        ''description'': ''–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ –Ω–∞ 30 –¥–Ω–µ–π'',
        ''price'': 199,  # –≤ —Ä—É–±–ª—è—Ö
        ''currency'': ''RUB''
    },
    ''premium_year'': {
        ''title'': ''üíé –ü—Ä–µ–º–∏—É–º –Ω–∞ –≥–æ–¥'',
        ''description'': ''–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤ + —Å–∫–∏–¥–∫–∞ 40%'',
        ''price'': 1199,
        ''currency'': ''RUB''
    },
    ''consultation'': {
        ''title'': ''üë®‚Äçüíº –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä—Ç–∞'',
        ''description'': ''–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è 60 –º–∏–Ω—É—Ç'',
        ''price'': 2500,
        ''currency'': ''RUB''
    }
}
```

### –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏:
```python
from telegram import InlineKeyboardButton, InlineKeyboardMarkup

async def shop_command(update: Update, context):
    keyboard = []
    
    for product_id, product in PRODUCTS.items():
        button_text = f"{product[''title'']} - {product[''price'']} ‚ÇΩ"
        keyboard.append([
            InlineKeyboardButton(button_text, callback_data=f''buy_{product_id}'')
        ])
    
    keyboard.append([InlineKeyboardButton("‚ÑπÔ∏è –û –ø–æ–¥–ø–∏—Å–∫–µ", callback_data=''subscription_info'')])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üõí **–ù–∞—à –º–∞–≥–∞–∑–∏–Ω:**\\n\\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ–∫—É–ø–∫–∏:",
        reply_markup=reply_markup,
        parse_mode=''Markdown''
    )

app.add_handler(CommandHandler("shop", shop_command))
```

## –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏

### –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–≤–æ–π—Å–∞:
```python
from telegram import LabeledPrice, InlineKeyboardButton, InlineKeyboardMarkup
import os

PAYMENT_TOKEN = os.getenv(''PAYMENT_TOKEN'')

async def handle_purchase(update: Update, context):
    query = update.callback_query
    await query.answer()
    
    product_id = query.data.replace(''buy_'', '''')
    
    if product_id in PRODUCTS:
        product = PRODUCTS[product_id]
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–π—Å (—Ü–µ–Ω–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö)
        prices = [LabeledPrice(product[''title''], product[''price''] * 100)]
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–≤–æ–π—Å
        await context.bot.send_invoice(
            chat_id=query.from_user.id,
            title=product[''title''],
            description=product[''description''],
            payload=f"product_{product_id}_{query.from_user.id}",
            provider_token=PAYMENT_TOKEN,
            currency=product[''currency''],
            prices=prices,
            start_parameter=''shop''
        )
    else:
        await query.edit_message_text("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")

app.add_handler(CallbackQueryHandler(handle_purchase, pattern=''^buy_''))
```

### –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏:
```python
from telegram.ext import PreCheckoutQueryHandler

async def precheckout_callback(update: Update, context):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–∞"""
    query = update.pre_checkout_query
    
    # –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–µ–º OK –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    await query.answer(ok=True)

app.add_handler(PreCheckoutQueryHandler(precheckout_callback))
```

### –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞:
```python
from telegram.ext import MessageHandler, filters
from datetime import datetime, timedelta

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
USER_SUBSCRIPTIONS = {}

async def successful_payment_callback(update: Update, context):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂"""
    payment = update.message.successful_payment
    user_id = update.effective_user.id
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –∏–∑ payload
    payload_parts = payment.invoice_payload.split(''_'')
    product_id = payload_parts[1]
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    if product_id in [''premium_month'', ''premium_year'']:
        days = 30 if product_id == ''premium_month'' else 365
        expiry_date = datetime.now() + timedelta(days=days)
        
        USER_SUBSCRIPTIONS[user_id] = {
            ''type'': ''premium'',
            ''expires'': expiry_date,
            ''purchased'': datetime.now()
        }
        
        await update.message.reply_text(
            f"‚úÖ **–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!**\\n\\n"
            f"üí∞ –°—É–º–º–∞: {payment.total_amount // 100} {payment.currency}\\n"
            f"üî• –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –¥–æ {expiry_date.strftime(''%d.%m.%Y'')}\\n\\n"
            f"–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞!",
            parse_mode=''Markdown''
        )
    
    # –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∂—É
    print(f"–ü—Ä–æ–¥–∞–∂–∞: {product_id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –Ω–∞ —Å—É–º–º—É {payment.total_amount // 100} {payment.currency}")

app.add_handler(MessageHandler(filters.SUCCESSFUL_PAYMENT, successful_payment_callback))
```

## –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏

### –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–µ–º–∏—É–º–∞:
```python
def has_premium_subscription(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞"""
    if user_id not in USER_SUBSCRIPTIONS:
        return False
    
    subscription = USER_SUBSCRIPTIONS[user_id]
    return datetime.now() < subscription[''expires'']

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–π
def premium_required(func):
    async def wrapper(update: Update, context):
        user_id = update.effective_user.id
        
        if has_premium_subscription(user_id):
            return await func(update, context)
        else:
            keyboard = [[InlineKeyboardButton("üíé –ö—É–ø–∏—Ç—å –ø—Ä–µ–º–∏—É–º", callback_data=''buy_premium_month'')]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            await update.message.reply_text(
                "üîí **–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!**\\n\\n"
                "üíé –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø—Ä–µ–º–∏—É–º–∞:\\n"
                "‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã\\n"
                "‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\\n"
                "‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\\n"
                "‚Ä¢ –ù–µ—Ç —Ä–µ–∫–ª–∞–º—ã",
                reply_markup=reply_markup,
                parse_mode=''Markdown''
            )
    
    return wrapper

# –ü—Ä–∏–º–µ—Ä –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏
@premium_required
async def premium_feature(update: Update, context):
    await update.message.reply_text(
        "‚ú® **–ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!**\\n\\n"
        "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º.",
        parse_mode=''Markdown''
    )

app.add_handler(CommandHandler("premium_feature", premium_feature))
```

## –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã

### –ÆMoney (–ø—Ä—è–º—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã):
```python
async def yoomoney_payment(update: Update, context):
    user_id = update.effective_user.id
    amount = 199  # –¶–µ–Ω–∞ –≤ —Ä—É–±–ª—è—Ö
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–ª–∞—Ç–µ–∂–∞
    payment_id = f"payment_{user_id}_{int(datetime.now().timestamp())}"
    
    payment_text = f"""
üí≥ **–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –ÆMoney:**

üí∞ –°—É–º–º–∞: {amount} ‚ÇΩ
üìß –ü–æ–ª—É—á–∞—Ç–µ–ª—å: 4100116123456789
üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {payment_id}

‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞—á–∏—Å–ª–µ–Ω–∏—è!

–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂"
    """
    
    keyboard = [
        [InlineKeyboardButton("üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", url="https://yoomoney.ru/transfer")],
        [InlineKeyboardButton("‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂", callback_data=f''check_payment_{payment_id}'')]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        payment_text,
        reply_markup=reply_markup,
        parse_mode=''Markdown''
    )
```

### QIWI –ø–ª–∞—Ç–µ–∂–∏:
```python
import qrcode
from io import BytesIO

async def qiwi_payment(update: Update, context):
    user_id = update.effective_user.id
    amount = 199
    
    # QR-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã QIWI
    qr_text = f"https://qiwi.com/payment/form/99?extra%5B''account''%5D=79991234567&amountInteger={amount}&amountFraction=0&currency=643&comment=payment_{user_id}"
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥
    qr = qrcode.QRCode(version=1, box_size=10, border=5)
    qr.add_data(qr_text)
    qr.make(fit=True)
    
    qr_image = qr.make_image(fill_color="black", back_color="white")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ BytesIO
    bio = BytesIO()
    qr_image.save(bio, format=''PNG'')
    bio.seek(0)
    
    await update.message.reply_photo(
        photo=bio,
        caption=f"üì± **–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ QIWI:**\\n\\nüí∞ –°—É–º–º–∞: {amount} ‚ÇΩ\\n\\n–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –∏–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ",
        parse_mode=''Markdown''
    )
```

## –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂

### –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞:
```python
# –•—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂
SALES_STATS = {
    ''total_sales'': 0,
    ''total_revenue'': 0,
    ''products_sold'': {},
    ''daily_sales'': {}
}

async def sales_stats(update: Update, context):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∞–¥–º–∏–Ω
    admin_ids = [123456789]  # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    
    if update.effective_user.id not in admin_ids:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return
    
    stats_text = f"""
üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂:**

üí∞ –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: {SALES_STATS[''total_revenue'']} ‚ÇΩ
üõí –í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–∂: {SALES_STATS[''total_sales'']}

üì¶ **–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:**
    """
    
    for product, count in SALES_STATS[''products_sold''].items():
        stats_text += f"‚Ä¢ {product}: {count} —à—Ç.\\n"
    
    await update.message.reply_text(stats_text, parse_mode=''Markdown'')

app.add_handler(CommandHandler("stats", sales_stats))
```

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

**–°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –ø–ª–∞—Ç–µ–∂–µ–π –≤ –±–æ—Ç–µ:**

1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Telegram Payments —Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º
2. –°–æ–∑–¥–∞–π—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤/–ø–æ–¥–ø–∏—Å–æ–∫
3. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–ª–∞—Ç–µ–∂–µ–π
4. –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞
5. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏
6. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–æ–∫—É–ø–∫—É (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ä—Ç—ã)

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- –î–æ–±–∞–≤—å—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
- –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
- –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–¥–∞–∂
- –î–æ–±–∞–≤—å—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏

**–†–µ–∑—É–ª—å—Ç–∞—Ç:** –ú–æ–Ω–µ—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ—Ç —Å —Å–∏—Å—Ç–µ–º–æ–π –ø–æ–¥–ø–∏—Å–æ–∫!

## –ß—Ç–æ –¥–∞–ª—å—à–µ?

–í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –∏–∑—É—á–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –±–æ—Ç–∞: –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Ö–æ—Å—Ç–∏–Ω–≥, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç—ã—Å—è—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!',
  1,
  55,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  content = EXCLUDED.content,
  updated_at = NOW();

-- –£—Ä–æ–∫ 5.2: –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
INSERT INTO lessons (id, module_id, title, type, content, order_index, estimated_duration, created_at, updated_at)
VALUES (
  91,
  48,
  '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ',
  '# –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ

## –ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É

### –†–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–æ–º:
- **–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞** ‚Äî —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –Ω–µ–±–æ–ª—å—à–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏
- **–ü—Ä–æ–¥–∞–∫—à–µ–Ω** ‚Äî —Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –¥–ª—è —Ç—ã—Å—è—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
- **Staging** ‚Äî –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–∞—è —Å—Ä–µ–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

### –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É:
- ‚úÖ **–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å** ‚Äî 99.9% uptime
- ‚úÖ **–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å** ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–æ—Å—Ç–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏  
- ‚úÖ **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å** ‚Äî –∑–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
- ‚úÖ **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥** ‚Äî –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
- ‚úÖ **–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ** ‚Äî –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö

## –í–∞—Ä–∏–∞–Ω—Ç—ã —Ö–æ—Å—Ç–∏–Ω–≥–∞ –¥–ª—è –±–æ—Ç–æ–≤

### 1. –û–±–ª–∞—á–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
**Replit (Always On):**
- ‚úÖ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
- ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
- ‚ùå –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
- üí∞ $5-20/–º–µ—Å—è—Ü

**Heroku:**
- ‚úÖ Git-–¥–µ–ø–ª–æ–π
- ‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–æ add-ons
- ‚ùå –î–æ—Ä–æ–≥–æ–π –ø—Ä–∏ —Ä–æ—Å—Ç–µ
- üí∞ $7-25/–º–µ—Å—è—Ü

**Railway:**
- ‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
- ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π
- üí∞ $5-15/–º–µ—Å—è—Ü

### 2. VPS —Å–µ—Ä–≤–µ—Ä—ã
**DigitalOcean Droplets:**
- ‚úÖ –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å
- ‚úÖ –•–æ—Ä–æ—à–∞—è —Ü–µ–Ω–∞
- ‚ùå –¢—Ä–µ–±—É–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
- üí∞ $4-10/–º–µ—Å—è—Ü

**–Ø–Ω–¥–µ–∫—Å.–û–±–ª–∞–∫–æ:**
- ‚úÖ –†–æ—Å—Å–∏–π—Å–∫–∞—è —é—Ä–∏—Å–¥–∏–∫—Ü–∏—è
- ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –Ø–Ω–¥–µ–∫—Å —Å–µ—Ä–≤–∏—Å–∞–º–∏
- üí∞ –æ—Ç 400‚ÇΩ/–º–µ—Å—è—Ü

### 3. Kubernetes
**–î–ª—è –±–æ–ª—å—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤:**
- ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
- ‚úÖ –í—ã—Å–æ–∫–∞—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å
- ‚ùå –°–ª–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –æ–∫—Ä—É–∂–µ–Ω–∏—è

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:
```
telegram-bot-production/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ bot/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ handlers/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ middleware/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ utils/
‚îÇ   ‚îú‚îÄ‚îÄ database/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ models/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ migrations/
‚îÇ   ‚îî‚îÄ‚îÄ services/
‚îú‚îÄ‚îÄ config/
‚îÇ   ‚îú‚îÄ‚îÄ production.env
‚îÇ   ‚îú‚îÄ‚îÄ staging.env
‚îÇ   ‚îî‚îÄ‚îÄ development.env
‚îú‚îÄ‚îÄ docker/
‚îÇ   ‚îú‚îÄ‚îÄ Dockerfile
‚îÇ   ‚îî‚îÄ‚îÄ docker-compose.yml
‚îú‚îÄ‚îÄ scripts/
‚îÇ   ‚îú‚îÄ‚îÄ deploy.sh
‚îÇ   ‚îî‚îÄ‚îÄ backup.sh
‚îú‚îÄ‚îÄ tests/
‚îî‚îÄ‚îÄ monitoring/
```

### –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
```env
# config/production.env
NODE_ENV=production
BOT_TOKEN=your_production_bot_token
DATABASE_URL=postgresql://user:pass@host:5432/botdb
REDIS_URL=redis://redis:6379
LOG_LEVEL=info
WEBHOOK_URL=https://yourdomain.com/webhook
ADMIN_IDS=123456789,987654321
SENTRY_DSN=https://your-sentry-dsn
```

## Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è

### Dockerfile:
```dockerfile
FROM node:18-alpine

# –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
WORKDIR /app

# –ö–æ–ø–∏—Ä—É–µ–º package.json –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
COPY package*.json ./
RUN npm ci --only=production

# –ö–æ–ø–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥
COPY src/ ./src/
COPY config/ ./config/

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
RUN addgroup -g 1001 -S nodejs
RUN adduser -S bot -u 1001
USER bot

# –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç
EXPOSE 3000

# –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞
CMD ["node", "src/index.js"]
```

### docker-compose.yml:
```yaml
version: ''3.8''

services:
  bot:
    build: .
    environment:
      - NODE_ENV=production
    env_file:
      - config/production.env
    depends_on:
      - database
      - redis
    restart: unless-stopped
    
  database:
    image: postgres:15
    environment:
      POSTGRES_DB: botdb
      POSTGRES_USER: botuser
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    
  redis:
    image: redis:alpine
    restart: unless-stopped
    
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl
    depends_on:
      - bot
    restart: unless-stopped

volumes:
  postgres_data:
```

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

### PostgreSQL –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞:
```javascript
// database/connection.js
const { Pool } = require(''pg'');

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  max: 20,                    // –ú–∞–∫—Å–∏–º—É–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
  idleTimeoutMillis: 30000,   // –¢–∞–π–º–∞—É—Ç –ø—Ä–æ—Å—Ç–æ—è
  connectionTimeoutMillis: 2000,
  ssl: process.env.NODE_ENV === ''production'' ? { rejectUnauthorized: false } : false
});

// –ú–∏–≥—Ä–∞—Ü–∏–∏
async function runMigrations() {
  const client = await pool.connect();
  
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await client.query(`
      CREATE TABLE IF NOT EXISTS users (
        id BIGINT PRIMARY KEY,
        username VARCHAR(255),
        first_name VARCHAR(255),
        language_code VARCHAR(10),
        is_premium BOOLEAN DEFAULT FALSE,
        premium_expires TIMESTAMP,
        created_at TIMESTAMP DEFAULT NOW(),
        updated_at TIMESTAMP DEFAULT NOW()
      )
    `);
    
    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–æ–æ–±—â–µ–Ω–∏–π
    await client.query(`
      CREATE TABLE IF NOT EXISTS messages (
        id SERIAL PRIMARY KEY,
        user_id BIGINT REFERENCES users(id),
        message_text TEXT,
        message_type VARCHAR(50),
        created_at TIMESTAMP DEFAULT NOW()
      )
    `);
    
    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    await client.query(`
      CREATE INDEX IF NOT EXISTS idx_users_premium_expires 
      ON users(premium_expires) WHERE is_premium = TRUE
    `);
    
    console.log(''‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ'');
    
  } catch (error) {
    console.error(''‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π:'', error);
  } finally {
    client.release();
  }
}

module.exports = { pool, runMigrations };
```

## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

### Winston –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:
```javascript
// utils/logger.js
const winston = require(''winston'');

const logger = winston.createLogger({
  level: process.env.LOG_LEVEL || ''info'',
  format: winston.format.combine(
    winston.format.timestamp(),
    winston.format.errors({ stack: true }),
    winston.format.json()
  ),
  transports: [
    // –§–∞–π–ª–æ–≤—ã–µ –ª–æ–≥–∏
    new winston.transports.File({ 
      filename: ''logs/error.log'', 
      level: ''error'' 
    }),
    new winston.transports.File({ 
      filename: ''logs/combined.log'' 
    }),
    
    // –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    ...(process.env.NODE_ENV !== ''production'' ? [
      new winston.transports.Console({
        format: winston.format.simple()
      })
    ] : [])
  ]
});

// Sentry –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
if (process.env.NODE_ENV === ''production'' && process.env.SENTRY_DSN) {
  const Sentry = require(''@sentry/node'');
  
  Sentry.init({
    dsn: process.env.SENTRY_DSN,
    environment: process.env.NODE_ENV
  });
  
  logger.add(new winston.transports.Console({
    format: winston.format.simple()
  }));
}

module.exports = logger;
```

### –ú–µ—Ç—Ä–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞:
```javascript
// utils/metrics.js
const redis = require(''redis'');
const client = redis.createClient(process.env.REDIS_URL);

class MetricsCollector {
  // –°—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
  static async incrementMessageCount(userId) {
    const today = new Date().toISOString().split(''T'')[0];
    await client.hincrby(`messages:${today}`, userId, 1);
    await client.incr(''total_messages'');
  }
  
  // –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
  static async trackActiveUser(userId) {
    const today = new Date().toISOString().split(''T'')[0];
    await client.sadd(`active_users:${today}`, userId);
  }
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–º–∞–Ω–¥
  static async trackCommand(command) {
    await client.hincrby(''command_stats'', command, 1);
  }
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  static async getDailyStats() {
    const today = new Date().toISOString().split(''T'')[0];
    
    const [
      activeUsers,
      messageCount,
      commandStats
    ] = await Promise.all([
      client.scard(`active_users:${today}`),
      client.hgetall(`messages:${today}`),
      client.hgetall(''command_stats'')
    ]);
    
    return {
      activeUsers,
      messageCount: Object.values(messageCount).reduce((sum, count) => sum + parseInt(count), 0),
      commandStats
    };
  }
}

module.exports = MetricsCollector;
```

## CI/CD –ø–∞–π–ø–ª–∞–π–Ω

### GitHub Actions –¥–ª—è –∞–≤—Ç–æ–¥–µ–ø–ª–æ—è:
```yaml
# .github/workflows/deploy.yml
name: Deploy Bot

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ''18''
      - run: npm ci
      - run: npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /app/telegram-bot
            git pull origin main
            docker-compose down
            docker-compose up -d --build
            
      - name: Health check
        run: |
          sleep 30
          curl -f https://yourdomain.com/health || exit 1
```

## –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥ –Ω–∞–≥—Ä—É–∑–∫–æ–π

### –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ:
```javascript
// cluster.js - –∑–∞–ø—É—Å–∫ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
const cluster = require(''cluster'');
const numCPUs = require(''os'').cpus().length;

if (cluster.isMaster) {
  console.log(`–ó–∞–ø—É—Å–∫ ${numCPUs} –≤–æ—Ä–∫–µ—Ä–æ–≤...`);
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Ä–∫–µ—Ä—ã
  for (let i = 0; i < numCPUs; i++) {
    cluster.fork();
  }
  
  cluster.on(''exit'', (worker, code, signal) => {
    console.log(`–í–æ—Ä–∫–µ—Ä ${worker.process.pid} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è`);
    cluster.fork(); // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —É–ø–∞–≤—à–∏–π –≤–æ—Ä–∫–µ—Ä
  });
  
} else {
  // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –≤–æ—Ä–∫–µ—Ä–µ
  require(''./src/bot'');
  console.log(`–í–æ—Ä–∫–µ—Ä ${process.pid} –∑–∞–ø—É—â–µ–Ω`);
}
```

### Load Balancer —Å Nginx:
```nginx
# nginx.conf
upstream bot_backend {
    server bot1:3000;
    server bot2:3000;
    server bot3:3000;
}

server {
    listen 80;
    server_name yourdomain.com;
    
    location /webhook {
        proxy_pass http://bot_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    location /health {
        proxy_pass http://bot_backend;
    }
}
```

## –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ

### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –±—ç–∫–∞–ø—ã:
```bash
#!/bin/bash
# scripts/backup.sh

DATE=$(date +%Y%m%d_%H%M%S)
BACKUP_DIR="/backups"

# –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
pg_dump $DATABASE_URL > "$BACKUP_DIR/database_$DATE.sql"

# –ë—ç–∫–∞–ø —Ñ–∞–π–ª–æ–≤
tar -czf "$BACKUP_DIR/files_$DATE.tar.gz" /app/data/

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤ –æ–±–ª–∞–∫–æ (AWS S3)
aws s3 cp "$BACKUP_DIR/database_$DATE.sql" s3://your-backup-bucket/
aws s3 cp "$BACKUP_DIR/files_$DATE.tar.gz" s3://your-backup-bucket/

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
find $BACKUP_DIR -name "*.sql" -mtime +30 -delete
find $BACKUP_DIR -name "*.tar.gz" -mtime +30 -delete

echo "–ë—ç–∫–∞–ø –∑–∞–≤–µ—Ä—à–µ–Ω: $DATE"
```

### Cron –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤:
```bash
# –î–æ–±–∞–≤–∏—Ç—å –≤ crontab
0 2 * * * /app/scripts/backup.sh >> /var/log/backup.log 2>&1
```

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

**–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –±–æ—Ç–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É:**

1. –°–æ–∑–¥–∞–π—Ç–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –±–æ—Ç–∞
2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ PostgreSQL –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
3. –î–æ–±–∞–≤—å—Ç–µ —Å–∏—Å—Ç–µ–º—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
4. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç—Ä–∏–∫–∏ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –±—ç–∫–∞–ø—ã
6. –°–æ–∑–¥–∞–π—Ç–µ CI/CD –ø–∞–π–ø–ª–∞–π–Ω

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
- –î–æ–±–∞–≤—å—Ç–µ rate limiting
- –†–µ–∞–ª–∏–∑—É–π—Ç–µ graceful shutdown
- –°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –∞–ª–µ—Ä—Ç–æ–≤

**–†–µ–∑—É–ª—å—Ç–∞—Ç:** –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –±–æ—Ç, –≥–æ—Ç–æ–≤—ã–π –∫ —Ç—ã—Å—è—á–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!

## –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º –∫—É—Ä—Å–∞! üéâ

–í—ã –ø—Ä–æ—à–ª–∏ –ø—É—Ç—å –æ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ –±–æ—Ç–∞ –¥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –≤—Å–µ –∑–Ω–∞–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É—Å–ø–µ—à–Ω—ã—Ö Telegram-–±–æ—Ç–æ–≤ –±–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!

### –ß—Ç–æ –≤—ã –∏–∑—É—á–∏–ª–∏:
- ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–æ—Ç–æ–≤
- ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –º–µ–Ω—é
- ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –≤–Ω–µ—à–Ω–∏–º–∏ API
- ‚úÖ –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ –ø–ª–∞—Ç–µ–∂–∏
- ‚úÖ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ

### –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
1. **–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –±–æ—Ç–∞**
2. **–ò–∑—É—á–∏—Ç–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è**
3. **–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –±–∏–∑–Ω–µ—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–æ—Ç–æ–≤**
4. **–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤**

**–£–¥–∞—á–∏ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Ç—Ä—è—Å–∞—é—â–∏—Ö –±–æ—Ç–æ–≤! üöÄ**',
  2,
  60,
  NOW(),
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  title = EXCLUDED.title,
  content = EXCLUDED.content,
  updated_at = NOW();

-- –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥–∏ –∫—É—Ä—Å–∞
INSERT INTO course_tags (course_id, tag)
VALUES 
  (10, 'telegram'),
  (10, '–±–æ—Ç—ã'),
  (10, 'replit'),
  (10, 'no-code'),
  (10, '–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è'),
  (10, '–º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è')
ON CONFLICT (course_id, tag) DO NOTHING;

SELECT '–ö—É—Ä—Å "–°–æ–∑–¥–∞–Ω–∏–µ Telegram-–±–æ—Ç–æ–≤ –Ω–∞ Replit –±–µ–∑ –∫–æ–¥–∞" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!' as result;