/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è NovaAI University –Ω–∞ Replit
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–¥–∞—á–∏:
 * 1. –°–æ–∑–¥–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–µ–ø–ª–æ—è –∏ –∫–æ–ø–∏—Ä—É–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
 * 2. –ó–∞–ø—É—Å–∫–∞–µ—Ç Express-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
 * 3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API-–∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä
 */
const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');
const express = require('express');
const { createProxyMiddleware } = require('http-proxy-middleware');

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–µ–ø–ª–æ—è, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
const deployDir = path.join(__dirname, 'deploy');
if (!fs.existsSync(deployDir)) {
  fs.mkdirSync(deployDir, { recursive: true });
}

try {
  // –û—á–∏—â–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ñ–∞–π–ª–æ–≤
  console.log('–û—á–∏—Å—Ç–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–µ–ø–ª–æ—è...');
  const files = fs.readdirSync(deployDir);
  for (const file of files) {
    fs.rmSync(path.join(deployDir, file), { recursive: true, force: true });
  }

  // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã —Å–±–æ—Ä–∫–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–µ–ø–ª–æ—è
  console.log('–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å–±–æ—Ä–∫–∏...');
  const distDir = path.join(__dirname, 'dist', 'public');
  
  if (!fs.existsSync(distDir)) {
    console.log('–°–±–æ—Ä–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é...');
    execSync('npm run build', { stdio: 'inherit' });
  }
  
  if (fs.existsSync(distDir)) {
    fs.cpSync(distDir, deployDir, { recursive: true });
    console.log('–§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–µ–ø–ª–æ—è.');
  } else {
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–±–æ—Ä–∫–∏!');
  }

  // –ö–æ–ø–∏—Ä—É–µ–º index-replit.html –∏ service-worker.js
  console.log('–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');
  try {
    fs.copyFileSync(
      path.join(__dirname, 'client', 'public', 'index-replit.html'), 
      path.join(deployDir, 'index-replit.html')
    );
    
    fs.copyFileSync(
      path.join(__dirname, 'client', 'public', 'service-worker.js'), 
      path.join(deployDir, 'service-worker.js')
    );
    
    fs.copyFileSync(
      path.join(__dirname, 'client', 'public', 'manifest.json'), 
      path.join(deployDir, 'manifest.json')
    );
    
    console.log('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ.');
  } catch (e) {
    console.warn('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã:', e.message);
  }
  
  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ SPA
  console.log('–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è SPA –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏...');
  fs.writeFileSync(path.join(deployDir, '_redirects'), '/* /index.html 200');
  fs.writeFileSync(path.join(deployDir, '.htaccess'), `
RewriteEngine On
RewriteBase /
RewriteRule ^index\\.html$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.html [L]
  `);

  // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  console.log('–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...');
  const app = express();
  
  // –õ–æ–≥ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  app.use((req, res, next) => {
    console.log(`${new Date().toISOString()} - ${req.method} ${req.url}`);
    next();
  });
  
  // –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ API-–∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä
  app.use('/api', createProxyMiddleware({
    target: 'http://localhost:5000',
    changeOrigin: true,
    pathRewrite: { '^/api': '/api' },
    onProxyReq: (proxyReq, req, res) => {
      // –ö–æ–ø–∏—Ä—É–µ–º cookies –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      if (req.headers.cookie) {
        proxyReq.setHeader('Cookie', req.headers.cookie);
      }
    },
    onError: (err, req, res) => {
      console.error('Proxy error:', err);
      res.status(500).send('–û—à–∏–±–∫–∞ API-–ø—Ä–æ–∫—Å–∏');
    }
  }));
  
  // –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
  app.use(express.static(deployDir, {
    index: false, // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–¥–∞—á—É index.html
    maxAge: '1d' // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏–∫–∏ –Ω–∞ 1 –¥–µ–Ω—å
  }));
  
  // –†–æ—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
  app.get('/status', (req, res) => {
    res.json({
      status: 'ok',
      timestamp: new Date().toISOString(),
      env: process.env.NODE_ENV || 'production'
    });
  });
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞–≥—Ä—É–∑–∫–∏
  app.get('/index-replit.html', (req, res) => {
    res.sendFile(path.join(deployDir, 'index-replit.html'));
  });
  
  // –ü—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ index.html –¥–ª—è SPA
  app.get('*', (req, res) => {
    if (req.url.includes('.')) {
      // –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –Ω–∞–π–¥–µ–Ω
      return res.status(404).send('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º index.html
    res.sendFile(path.join(deployDir, 'index.html'));
  });
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
  app.use((err, req, res, next) => {
    console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err.stack);
    res.status(500).send('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  });
  
  const PORT = process.env.PORT || 3000;
  app.listen(PORT, () => {
    console.log(`
==========================================================
üöÄ –°–µ—Ä–≤–µ—Ä NovaAI University —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}
==========================================================
üìÅ –û–±—Å–ª—É–∂–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏–∑: ${deployDir}
üåê –†–µ–∂–∏–º: ${process.env.NODE_ENV || 'production'}
üìä –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞: http://localhost:${PORT}/status
üîó –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: http://localhost:${PORT}
==========================================================
    `);
  });

} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏:', error);
  process.exit(1);
}