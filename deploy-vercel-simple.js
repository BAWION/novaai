#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Vercel (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥) + Replit (API)
 * –°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω
 */

import { execSync } from 'child_process';
import fs from 'fs';

const log = (msg, color = 'white') => {
  const colors = {
    green: '\x1b[32m',
    yellow: '\x1b[33m',
    red: '\x1b[31m',
    blue: '\x1b[34m',
    white: '\x1b[37m',
    reset: '\x1b[0m'
  };
  console.log(`${colors[color]}${msg}${colors.reset}`);
};

function checkVercelCLI() {
  try {
    execSync('vercel --version', { stdio: 'ignore' });
    log('‚úÖ Vercel CLI –Ω–∞–π–¥–µ–Ω', 'green');
  } catch (error) {
    log('üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Vercel CLI...', 'yellow');
    execSync('npm install -g vercel', { stdio: 'inherit' });
  }
}

function buildProject() {
  log('üèóÔ∏è  –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...', 'blue');
  try {
    execSync('npm run build', { stdio: 'inherit' });
    log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω', 'green');
  } catch (error) {
    log('‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏', 'red');
    process.exit(1);
  }
}

function deployToVercel() {
  log('üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel...', 'blue');
  try {
    execSync('vercel --prod', { stdio: 'inherit' });
    log('‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!', 'green');
  } catch (error) {
    log('‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è', 'red');
    process.exit(1);
  }
}

function showResult() {
  log('\nüéâ –ì–û–¢–û–í–û!', 'green');
  log('–í–∞—à–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞:', 'white');
  log('‚Ä¢ –§—Ä–æ–Ω—Ç–µ–Ω–¥: –Ω–∞ Vercel —Å –≤–∞—à–∏–º –¥–æ–º–µ–Ω–æ–º', 'white');
  log('‚Ä¢ API: –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ Replit', 'white');
  log('‚Ä¢ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏', 'white');
  
  log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:', 'blue');
  log('1. –î–æ–±–∞–≤—å—Ç–µ –¥–æ–º–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Vercel', 'yellow');
  log('2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS —É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', 'yellow');
  log('3. –î–æ–±–∞–≤—å—Ç–µ API –∫–ª—é—á–∏ –≤ Environment Variables', 'yellow');
  
  log('\n‚ö° –†–µ–∑—É–ª—å—Ç–∞—Ç: –≥–æ—Ç–æ–≤–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!', 'green');
}

function main() {
  log('üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ NovaAI University (Vercel + Replit)\n', 'blue');
  
  checkVercelCLI();
  buildProject();
  deployToVercel();
  showResult();
}

main();