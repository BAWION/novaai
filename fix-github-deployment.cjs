/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å GitHub –¥–µ–ø–ª–æ–µ–º
 * –°–æ–∑–¥–∞–µ—Ç –∞—Ä—Ö–∏–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã –∏–º–ø–æ—Ä—Ç–æ–≤
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  cyan: '\x1b[36m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

function fixImportIssues() {
  log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏...', 'yellow');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã use-mobile
  const indexCssPath = 'client/src/index.css';
  if (fs.existsSync(indexCssPath)) {
    let indexCss = fs.readFileSync(indexCssPath, 'utf8');
    
    // –£–¥–∞–ª—è–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –∏–∑ CSS —Ñ–∞–π–ª–∞
    if (indexCss.includes('/src/hooks/use-mobile.ts')) {
      indexCss = indexCss.replace(/.*\/src\/hooks\/use-mobile\.ts.*\n?/g, '');
      fs.writeFileSync(indexCssPath, indexCss);
      log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç use-mobile.ts –≤ index.css', 'green');
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
  const criticalFiles = [
    'client/src/hooks/use-mobile.ts',
    'client/src/hooks/use-auth.tsx',
    'client/src/context/auth-context.tsx',
    'client/src/components/auth/telegram-login.tsx'
  ];
  
  criticalFiles.forEach(file => {
    if (fs.existsSync(file)) {
      log(`‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${file}`, 'green');
    } else {
      log(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${file}`, 'red');
    }
  });
}

function createFixedGitHubPackage() {
  const timestamp = new Date().toISOString().replace(/[:.]/g, '-').slice(0, -5);
  const packageDir = `galaxion-github-fixed-${timestamp}`;
  
  log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –¥–ª—è GitHub...', 'cyan');
  
  try {
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if (!fs.existsSync(packageDir)) {
      fs.mkdirSync(packageDir, { recursive: true });
    }

    // –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è (–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π)
    const includeFiles = [
      // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
      'package.json',
      'package-lock.json',
      'vite.config.ts',
      'tailwind.config.ts',
      'postcss.config.js',
      'tsconfig.json',
      'components.json',
      'index.html',
      
      // Vercel –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
      'vercel.json',
      
      // –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
      'README.md',
      'replit.md'
    ];

    // –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    includeFiles.forEach(file => {
      if (fs.existsSync(file)) {
        const destPath = path.join(packageDir, file);
        const destDir = path.dirname(destPath);
        if (!fs.existsSync(destDir)) {
          fs.mkdirSync(destDir, { recursive: true });
        }
        fs.copyFileSync(file, destPath);
        log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ${file}`, 'green');
      }
    });

    // –ö–æ–ø–∏—Ä—É–µ–º client –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø–æ–ª–Ω–æ—Å—Ç—å—é (–Ω–æ –∏—Å–∫–ª—é—á–∞–µ–º –Ω–µ–Ω—É–∂–Ω–æ–µ)
    function copyDirectorySelective(src, dest, excludePatterns = []) {
      if (!fs.existsSync(dest)) {
        fs.mkdirSync(dest, { recursive: true });
      }

      const items = fs.readdirSync(src);
      
      for (const item of items) {
        const srcPath = path.join(src, item);
        const destPath = path.join(dest, item);
        const relativePath = path.relative('.', srcPath);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è
        const shouldExclude = excludePatterns.some(pattern => {
          if (pattern.endsWith('/')) {
            return relativePath.startsWith(pattern);
          }
          return relativePath.includes(pattern);
        });
        
        if (shouldExclude) {
          continue;
        }

        const stat = fs.statSync(srcPath);
        
        if (stat.isDirectory()) {
          copyDirectorySelective(srcPath, destPath, excludePatterns);
        } else {
          fs.copyFileSync(srcPath, destPath);
        }
      }
    }

    // –ö–æ–ø–∏—Ä—É–µ–º client/ –∏ shared/
    const excludePatterns = [
      'node_modules/',
      '.git/',
      '.env',
      'dist/',
      'build/'
    ];

    log('üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ client/...', 'yellow');
    copyDirectorySelective('client', path.join(packageDir, 'client'), excludePatterns);
    
    log('üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ shared/...', 'yellow');
    if (fs.existsSync('shared')) {
      copyDirectorySelective('shared', path.join(packageDir, 'shared'), excludePatterns);
    }

    // –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π vercel.json
    const vercelConfig = {
      "$schema": "https://openapi.vercel.sh/vercel.json",
      "version": 2,
      "framework": "vite",
      "buildCommand": "cd client && npm install && npm run build",
      "outputDirectory": "client/dist",
      "installCommand": "npm install",
      "devCommand": "npm run dev",
      "public": true,
      "functions": {
        "server/index.js": {
          "runtime": "nodejs18.x"
        }
      },
      "rewrites": [
        {
          "source": "/api/(.*)",
          "destination": "https://49c11d52-b1fc-4151-bb61-b9097616c44f-00-3h2ne9cwwtbvn.janeway.replit.dev/api/$1"
        },
        {
          "source": "/(.*)",
          "destination": "/$1"
        }
      ],
      "headers": [
        {
          "source": "/(.*\\.(css|js|png|jpg|jpeg|gif|ico|svg))",
          "headers": [
            {
              "key": "Cache-Control",
              "value": "public, max-age=31536000, immutable"
            }
          ]
        }
      ]
    };

    fs.writeFileSync(
      path.join(packageDir, 'vercel.json'),
      JSON.stringify(vercelConfig, null, 2)
    );
    log('‚úÖ –°–æ–∑–¥–∞–Ω –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π vercel.json', 'green');

    // –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
    log('üóúÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞...', 'yellow');
    execSync(`zip -r ${packageDir}.zip ${packageDir}/ -x "*.git*" "node_modules/*"`, { stdio: 'inherit' });
    
    const stats = fs.statSync(`${packageDir}.zip`);
    const fileSizeInMB = (stats.size / (1024 * 1024)).toFixed(1);
    
    log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç —Å–æ–∑–¥–∞–Ω!', 'green');
    log(`üì¶ –ê—Ä—Ö–∏–≤: ${packageDir}.zip (${fileSizeInMB} –ú–ë)`, 'cyan');
    
    return { packageDir, archiveName: `${packageDir}.zip` };
    
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`, 'red');
    throw error;
  }
}

function generateFixInstructions(packageName) {
  const instructions = `# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å GitHub –¥–µ–ø–ª–æ–µ–º

## üêõ –ü—Ä–æ–±–ª–µ–º—ã –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã:

### 1. –ò–º–ø–æ—Ä—Ç use-mobile.ts –≤ CSS
- –£–¥–∞–ª–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–º–ø–æ—Ä—Ç –∏–∑ index.css
- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤ hooks

### 2. –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Vercel
- –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π buildCommand —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
- –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π outputDirectory: "client/dist"
- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã rewrites –¥–ª—è API –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è

### 3. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
- –í–∫–ª—é—á–µ–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–µ–ø–ª–æ—è
- –ò—Å–∫–ª—é—á–µ–Ω—ã —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ø–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ client/ –∏ shared/

## üöÄ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ:

### –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
1. –û—Ç–∫—Ä–æ–π—Ç–µ https://github.com/BAWION/novaai.git
2. –£–¥–∞–ª–∏—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–ª–∏:
\`\`\`bash
git rm -r .
git commit -m "Clean repository for fixed deployment"
git push origin main
\`\`\`

### –®–∞–≥ 2: –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
1. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤ ${packageName}
2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏ –Ω–∞ GitHub
3. Commit message: "Fix: Resolve deployment issues and optimize build"

### –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–ø–ª–æ—è
1. Vercel –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç –Ω–æ–≤—ã–π –±–∏–ª–¥
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ https://www.galaxion.org/ —á–µ—Ä–µ–∑ 2-3 –º–∏–Ω—É—Ç—ã
3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ

## üîß –ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:
- ‚úÖ –£–±—Ä–∞–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –≤ CSS
- ‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω vercel.json –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏
- ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
- ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã hooks
- ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ API –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ`;

  fs.writeFileSync('GITHUB_FIX_INSTRUCTIONS.md', instructions);
  log('üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ GITHUB_FIX_INSTRUCTIONS.md', 'green');
}

function main() {
  log('üîß –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è GitHub –¥–µ–ø–ª–æ—è...', 'bright');
  
  try {
    fixImportIssues();
    const result = createFixedGitHubPackage();
    generateFixInstructions(result.archiveName);
    
    log('\nüìã –ò–¢–û–ì–ò:', 'bright');
    log(`‚úÖ –°–æ–∑–¥–∞–Ω –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤: ${result.archiveName}`, 'green');
    log('üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: GITHUB_FIX_INSTRUCTIONS.md', 'green');
    log('\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:', 'bright');
    log('1. –û—á–∏—Å—Ç–∏—Ç–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ—Ç —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤', 'cyan');
    log('2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã', 'cyan');
    log('3. –î–æ–∂–¥–∏—Ç–µ—Å—å —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è –Ω–∞ Vercel', 'cyan');
    
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`, 'red');
    process.exit(1);
  }
}

if (require.main === module) {
  main();
}

module.exports = { fixImportIssues, createFixedGitHubPackage };