#!/usr/bin/env node

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –≤ GitHub
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–æ—Ç–æ–≤–∏—Ç –≤—Å–µ —Ñ–∞–π–ª—ã –¥–ª—è Vercel –¥–µ–ø–ª–æ—è
 */

import fs from 'fs';
import path from 'path';
import { execSync } from 'child_process';

function log(message, color = '\x1b[36m') {
  console.log(`${color}%s\x1b[0m`, `[PACKAGE] ${message}`);
}

function createGitHubPackage() {
  const timestamp = new Date().toISOString().slice(0, 19).replace(/:/g, '-');
  const packageName = `novaai-update-${timestamp}`;
  const packageDir = `github-packages/${packageName}`;
  
  log('–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –¥–ª—è GitHub...');
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
  if (!fs.existsSync('github-packages')) {
    fs.mkdirSync('github-packages');
  }
  
  if (fs.existsSync(packageDir)) {
    fs.rmSync(packageDir, { recursive: true });
  }
  fs.mkdirSync(packageDir, { recursive: true });
  
  // –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
  log('–°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...');
  try {
    execSync('npm run build', { stdio: 'pipe' });
    log('–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
  } catch (error) {
    log('–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ—ë', '\x1b[33m');
  }
  
  // –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
  const filesToCopy = [
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    'vercel.json',
    'README.md',
    
    // –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥
    'client',
    'shared',
    
    // –°–±–æ—Ä–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    'dist',
    
    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    'public',
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    'components.json',
    'tailwind.config.ts',
    'postcss.config.js',
    'tsconfig.json',
    'vite.config.ts'
  ];
  
  // –ö–æ–ø–∏—Ä—É–µ–º package.json –∏–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
  if (fs.existsSync('package-for-github.json')) {
    fs.copyFileSync('package-for-github.json', path.join(packageDir, 'package.json'));
    log('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω package.json –¥–ª—è GitHub');
  }
  
  // –ö–æ–ø–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
  filesToCopy.forEach(item => {
    const sourcePath = item;
    const destPath = path.join(packageDir, item);
    
    if (fs.existsSync(sourcePath)) {
      const stats = fs.statSync(sourcePath);
      
      if (stats.isDirectory()) {
        // –ö–æ–ø–∏—Ä—É–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
        fs.cpSync(sourcePath, destPath, { recursive: true });
        log(`–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –ø–∞–ø–∫–∞: ${item}`);
      } else {
        // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
        fs.copyFileSync(sourcePath, destPath);
        log(`–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª: ${item}`);
      }
    } else {
      log(`–ü—Ä–æ–ø—É—â–µ–Ω (–Ω–µ –Ω–∞–π–¥–µ–Ω): ${item}`, '\x1b[33m');
    }
  });
  
  // –°–æ–∑–¥–∞–µ–º ZIP –∞—Ä—Ö–∏–≤
  const zipName = `${packageName}.zip`;
  const zipPath = path.join('github-packages', zipName);
  
  log('–°–æ–∑–¥–∞–Ω–∏–µ ZIP –∞—Ä—Ö–∏–≤–∞...');
  try {
    execSync(`cd github-packages && zip -r ${zipName} ${packageName}/`, { stdio: 'pipe' });
    log(`ZIP –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: ${zipPath}`);
  } catch (error) {
    log('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è ZIP, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é', '\x1b[31m');
  }
  
  // –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
  const instructionFile = path.join(packageDir, 'DEPLOY-INSTRUCTION.md');
  const instruction = `# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é

## –ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤ GitHub

1. –°–∫–∞—á–∞–π—Ç–µ –∞—Ä—Ö–∏–≤: \`${zipName}\`
2. –ò–∑–≤–ª–µ–∫–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ \`${packageName}/\`
3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –∫–æ—Ä–µ–Ω—å –≤–∞—à–µ–≥–æ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
4. Vercel –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç —Å–∞–π—Ç —á–µ—Ä–µ–∑ 2-3 –º–∏–Ω—É—Ç—ã

## –ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ –≤ –ø–∞–∫–µ—Ç:

- \`vercel.json\` - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Vercel
- \`package.json\` - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
- \`client/\` - React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
- \`shared/\` - –æ–±—â–∏–µ —Ç–∏–ø—ã –∏ —Å—Ö–µ–º—ã
- \`dist/\` - —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
- \`public/\` - —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã

## –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:

- GitHub: https://github.com/BAWION/novaai
- Vercel Dashboard: https://vercel.com/dashboard
- –í–∞—à —Å–∞–π—Ç: https://gulcheev.com

## –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:
- –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤: 2-3 –º–∏–Ω—É—Ç—ã
- –°–±–æ—Ä–∫–∞ –Ω–∞ Vercel: 2-3 –º–∏–Ω—É—Ç—ã
- –û–±—â–µ–µ –≤—Ä–µ–º—è: 5-6 –º–∏–Ω—É—Ç

–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date().toLocaleString('ru-RU')}
`;
  
  fs.writeFileSync(instructionFile, instruction);
  
  console.log('\nüéâ –ü–∞–∫–µ—Ç –¥–ª—è GitHub –≥–æ—Ç–æ–≤!');
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
  console.log(`üì¶ –ê—Ä—Ö–∏–≤: ${zipPath}`);
  console.log(`üìÅ –ü–∞–ø–∫–∞: ${packageDir}`);
  console.log(`üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: ${instructionFile}`);
  console.log('\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –°–∫–∞—á–∞–π—Ç–µ –∞—Ä—Ö–∏–≤ –∏–∑ –ø–∞–ø–∫–∏ github-packages/');
  console.log('2. –ò–∑–≤–ª–µ–∫–∏—Ç–µ –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ GitHub');
  console.log('3. Vercel –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç —Å–∞–π—Ç');
  
  return { packageDir, zipPath, packageName };
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  try {
    const result = createGitHubPackage();
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    console.log('\nüìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–∫–µ—Ç–∞:');
    const files = fs.readdirSync(result.packageDir);
    files.forEach(file => {
      console.log(`   ${file}`);
    });
    
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–∫–µ—Ç–∞:', error.message);
    process.exit(1);
  }
}

main();