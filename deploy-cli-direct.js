#!/usr/bin/env node

/**
 * –ü—Ä—è–º–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Vercel CLI
 * –ë—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± –±–µ–∑ GitHub - –æ—Ç —Å–±–æ—Ä–∫–∏ –¥–æ –ø—Ä–æ–¥–∞–∫—à–Ω –∑–∞ 5 –º–∏–Ω—É—Ç
 */

import { execSync } from 'child_process';
import fs from 'fs';

const log = (msg, color = 'white') => {
  const colors = {
    green: '\x1b[32m',
    yellow: '\x1b[33m',
    red: '\x1b[31m',
    blue: '\x1b[34m',
    white: '\x1b[37m',
    reset: '\x1b[0m'
  };
  console.log(`${colors[color]}${msg}${colors.reset}`);
};

function checkVercelCLI() {
  try {
    execSync('vercel --version', { stdio: 'ignore' });
    log('‚úÖ Vercel CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', 'green');
    return true;
  } catch (error) {
    log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Vercel CLI...', 'yellow');
    try {
      execSync('npm install -g vercel', { stdio: 'inherit' });
      log('‚úÖ Vercel CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', 'green');
      return true;
    } catch (installError) {
      log('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Vercel CLI', 'red');
      return false;
    }
  }
}

function buildProject() {
  log('üèóÔ∏è  –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...', 'blue');
  
  try {
    execSync('npm run build', { stdio: 'inherit' });
    
    if (!fs.existsSync('dist')) {
      throw new Error('–ü–∞–ø–∫–∞ dist –Ω–µ —Å–æ–∑–¥–∞–Ω–∞');
    }
    
    log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ', 'green');
    return true;
  } catch (error) {
    log('‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞', 'red');
    log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:', 'yellow');
    log('‚Ä¢ npm install –≤—ã–ø–æ–ª–Ω–µ–Ω?', 'yellow');
    log('‚Ä¢ –ù–µ—Ç –æ—à–∏–±–æ–∫ TypeScript?', 'yellow');
    log('‚Ä¢ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã?', 'yellow');
    return false;
  }
}

function loginToVercel() {
  log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Vercel...', 'blue');
  
  try {
    execSync('vercel whoami', { stdio: 'ignore' });
    log('‚úÖ –í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Vercel', 'green');
    return true;
  } catch (error) {
    log('üîë –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Vercel...', 'yellow');
    try {
      execSync('vercel login', { stdio: 'inherit' });
      log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞', 'green');
      return true;
    } catch (loginError) {
      log('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏', 'red');
      return false;
    }
  }
}

function deployToVercel() {
  log('üöÄ –ù–∞—á–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è)...', 'blue');
  
  try {
    // –ü–µ—Ä–≤—ã–π –¥–µ–ø–ª–æ–π –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
    execSync('vercel --yes', { stdio: 'inherit' });
    log('‚úÖ –ü—Ä–æ–µ–∫—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω', 'green');
    
    log('üéØ –ü—Ä–æ–¥–∞–∫—à–Ω —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ...', 'blue');
    // –ü—Ä–æ–¥–∞–∫—à–Ω –¥–µ–ø–ª–æ–π
    execSync('vercel --prod', { stdio: 'inherit' });
    log('‚úÖ –ü—Ä–æ–¥–∞–∫—à–Ω —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!', 'green');
    
    return true;
  } catch (error) {
    log('‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è', 'red');
    return false;
  }
}

function addEnvironmentVariables() {
  log('\nüîß –ù–ê–°–¢–†–û–ô–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø:', 'blue');
  log('–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Vercel Dashboard:', 'white');
  log('1. –û—Ç–∫—Ä–æ–π—Ç–µ https://vercel.com/dashboard', 'yellow');
  log('2. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç ‚Üí Settings ‚Üí Environment Variables', 'yellow');
  log('3. –î–æ–±–∞–≤—å—Ç–µ:', 'yellow');
  log('   OPENAI_API_KEY = –≤–∞—à_–∫–ª—é—á_openai', 'white');
  log('   ANTHROPIC_API_KEY = –≤–∞—à_–∫–ª—é—á_anthropic', 'white');
  log('   NODE_ENV = production', 'white');
  log('4. –ü–µ—Ä–µ—Å–æ–±–µ—Ä–∏—Ç–µ: vercel --prod', 'yellow');
}

function showManagementCommands() {
  log('\nüìù –ö–û–ú–ê–ù–î–´ –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø:', 'blue');
  log('–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω:', 'yellow');
  log('  npm run build && vercel --prod', 'white');
  log('', 'white');
  log('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:', 'yellow');
  log('  vercel ls', 'white');
  log('', 'white');
  log('–õ–æ–≥–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–µ–ø–ª–æ—è:', 'yellow');
  log('  vercel logs', 'white');
  log('', 'white');
  log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:', 'yellow');
  log('  vercel inspect', 'white');
  log('', 'white');
  log('–û—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏:', 'yellow');
  log('  vercel rollback', 'white');
}

function showDomainSetup() {
  log('\nüåê –ù–ê–°–¢–†–û–ô–ö–ê –°–û–ë–°–¢–í–ï–ù–ù–û–ì–û –î–û–ú–ï–ù–ê:', 'blue');
  log('1. –í Vercel Dashboard: Settings ‚Üí Domains', 'yellow');
  log('2. Add Domain ‚Üí gulcheev.com', 'yellow');
  log('3. –£ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–º–µ–Ω–∞ –¥–æ–±–∞–≤—å—Ç–µ:', 'yellow');
  log('   Type: A, Name: @, Value: 76.76.19.61', 'white');
  log('   Type: CNAME, Name: www, Value: cname.vercel-dns.com', 'white');
  log('4. SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞—Å—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏', 'yellow');
}

function showFinalResult() {
  log('\nüéâ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!', 'green');
  log('', 'white');
  log('–ß—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å:', 'blue');
  log('‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–∞ Vercel —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º CDN', 'white');
  log('‚úÖ API –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç—Å—è –Ω–∞ Replit —Å–µ—Ä–≤–µ—Ä', 'white');
  log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', 'white');
  log('‚úÖ –í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', 'white');
  log('‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–æ 500 –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 'white');
  log('', 'white');
  log('–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:', 'blue');
  log('‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ API –∫–ª—é—á–∏ –≤ Environment Variables', 'yellow');
  log('‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–æ–º–µ–Ω', 'yellow');
  log('‚Ä¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã', 'yellow');
}

function createQuickUpdateScript() {
  const updateScript = `#!/bin/bash

# –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ NovaAI University –Ω–∞ Vercel

echo "üèóÔ∏è  –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
npm run build

if [ $? -eq 0 ]; then
    echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel..."
    vercel --prod
    echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏"
    exit 1
fi
`;

  fs.writeFileSync('update-vercel.sh', updateScript);
  try {
    fs.chmodSync('update-vercel.sh', '755');
  } catch (error) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É chmod –Ω–∞ Windows
  }
  
  log('‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç update-vercel.sh –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π', 'green');
}

async function main() {
  log('‚ö° –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel —á–µ—Ä–µ–∑ CLI\n', 'blue');
  
  if (!checkVercelCLI()) {
    process.exit(1);
  }
  
  if (!buildProject()) {
    process.exit(1);
  }
  
  if (!loginToVercel()) {
    process.exit(1);
  }
  
  if (!deployToVercel()) {
    process.exit(1);
  }
  
  createQuickUpdateScript();
  addEnvironmentVariables();
  showManagementCommands();
  showDomainSetup();
  showFinalResult();
}

main().catch(console.error);