import React, { useState, useEffect, useRef } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { DashboardLayout } from "@/components/layout/dashboard-layout";
import { Glassmorphism } from "@/components/ui/glassmorphism";
import { useParams, useLocation } from "wouter";
import { useToast } from "@/hooks/use-toast";
import { check_secrets } from "../check-secrets";

// Interfaces –¥–ª—è –º–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
interface Lesson {
  id: string;
  title: string;
  type: 'video' | 'text' | 'quiz' | 'interactive';
  duration: number; // –≤ –º–∏–Ω—É—Ç–∞—Ö
  difficulty: 1 | 2 | 3;  // 1-–ª–µ–≥–∫–æ, 2-—Å—Ä–µ–¥–Ω–µ, 3-—Å–ª–æ–∂–Ω–æ
  completed: boolean;
  progress: number; // 0-100
  concepts: string[]; // –∫–ª—é—á–µ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ —É—Ä–æ–∫–∞
  prerequisites: string[]; // id –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Ä–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å
}

interface Module {
  id: string;
  title: string;
  description: string;
  lessons: Lesson[];
  completed: boolean;
  progress: number; // 0-100
}

interface Course {
  id: string;
  title: string;
  description: string;
  modules: Module[];
  level: 'beginner' | 'intermediate' | 'advanced';
  skillLevel: number; // 1-10
  duration: number; // –æ–±—â–µ–µ –≤—Ä–µ–º—è –≤ —á–∞—Å–∞—Ö
  learningPath: string[]; // —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–æ–¥—É–ª–µ–π –∏ —É—Ä–æ–∫–æ–≤
  adaptivePath: string[]; // –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
}

interface UserProfile {
  learningStyle: 'visual' | 'auditory' | 'kinesthetic' | 'reading-writing';
  strengths: string[];
  weaknesses: string[];
  preferredPace: 'slow' | 'medium' | 'fast';
  background: string[];
  goals: string[];
  interests: string[];
}

interface AIAssistant {
  name: string;
  avatar: string;
  specialty: string;
  personality: string;
  messages: AIMessage[];
}

interface AIMessage {
  id: string;
  sender: 'ai' | 'user';
  text: string;
  timestamp: Date;
  type: 'tip' | 'question' | 'answer' | 'error' | 'success' | 'info';
  relatedConceptId?: string;
}

// –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—ã–ª–æ –±—ã –∏–∑ API)
const SAMPLE_COURSE: Course = {
  id: "python-for-ai-beginners",
  title: "Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –≤ AI",
  description: "–ö—É—Ä—Å –∑–Ω–∞–∫–æ–º–∏—Ç —Å –æ—Å–Ω–æ–≤–∞–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Python, –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–æ—Å—Ç—ã–º–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è. –≠—Ç–æ—Ç –∫—É—Ä—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ –±–µ–∑ –æ–ø—ã—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.",
  level: "beginner",
  skillLevel: 1,
  duration: 20, // —á–∞—Å–æ–≤
  modules: [
    {
      id: "m1",
      title: "–í–≤–µ–¥–µ–Ω–∏–µ –≤ Python",
      description: "–û—Å–Ω–æ–≤—ã —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞, —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–æ—Å—Ç—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ Python",
      completed: false,
      progress: 0,
      lessons: [
        {
          id: "m1l1",
          title: "–ß—Ç–æ —Ç–∞–∫–æ–µ Python –∏ –ø–æ—á–µ–º—É –æ–Ω –≤–∞–∂–µ–Ω –¥–ª—è AI",
          type: "text",
          duration: 15,
          difficulty: 1,
          completed: false,
          progress: 0,
          concepts: ["python", "history", "applications"],
          prerequisites: []
        },
        {
          id: "m1l2",
          title: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∏ –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
          type: "video",
          duration: 20,
          difficulty: 1,
          completed: false,
          progress: 0,
          concepts: ["installation", "IDE", "hello-world"],
          prerequisites: ["m1l1"]
        },
        {
          id: "m1l3",
          title: "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö",
          type: "interactive",
          duration: 30,
          difficulty: 2,
          completed: false,
          progress: 0,
          concepts: ["variables", "data-types", "casting"],
          prerequisites: ["m1l2"]
        },
        {
          id: "m1l4",
          title: "–ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è",
          type: "interactive",
          duration: 25,
          difficulty: 2,
          completed: false,
          progress: 0,
          concepts: ["operators", "expressions", "order-of-operations"],
          prerequisites: ["m1l3"]
        },
        {
          id: "m1l5",
          title: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π: –æ—Å–Ω–æ–≤—ã Python",
          type: "quiz",
          duration: 15,
          difficulty: 2,
          completed: false,
          progress: 0,
          concepts: ["assessment", "basics-recap"],
          prerequisites: ["m1l1", "m1l2", "m1l3", "m1l4"]
        }
      ]
    },
    {
      id: "m2",
      title: "–£–ø—Ä–∞–≤–ª—è—é—â–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏",
      description: "–£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã, —Ü–∏–∫–ª—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã",
      completed: false,
      progress: 0,
      lessons: [
        {
          id: "m2l1",
          title: "–£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã: if, elif, else",
          type: "text",
          duration: 20,
          difficulty: 2,
          completed: false,
          progress: 0,
          concepts: ["conditionals", "boolean-logic", "comparison-operators"],
          prerequisites: ["m1l5"]
        },
        {
          id: "m2l2",
          title: "–¶–∏–∫–ª—ã: for –∏ while",
          type: "interactive",
          duration: 30,
          difficulty: 2,
          completed: false,
          progress: 0,
          concepts: ["loops", "iteration", "break-continue"],
          prerequisites: ["m2l1"]
        },
        {
          id: "m2l3",
          title: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π: try/except",
          type: "video",
          duration: 25,
          difficulty: 3,
          completed: false,
          progress: 0,
          concepts: ["exceptions", "error-handling", "debugging"],
          prerequisites: ["m2l2"]
        },
        {
          id: "m2l4",
          title: "–ü—Ä–∞–∫—Ç–∏–∫–∞: —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π –∏–≥—Ä—ã-–≤–∏–∫—Ç–æ—Ä–∏–Ω—ã",
          type: "interactive",
          duration: 45,
          difficulty: 3,
          completed: false,
          progress: 0,
          concepts: ["project", "application", "integration"],
          prerequisites: ["m2l1", "m2l2", "m2l3"]
        }
      ]
    },
    {
      id: "m3",
      title: "–§—É–Ω–∫—Ü–∏–∏ –∏ –º–æ–¥—É–ª–∏",
      description: "–°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞",
      completed: false,
      progress: 0,
      lessons: [
        {
          id: "m3l1",
          title: "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏ –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π",
          type: "text",
          duration: 25,
          difficulty: 2,
          completed: false,
          progress: 0,
          concepts: ["functions", "parameters", "return-values"],
          prerequisites: ["m2l4"]
        },
        {
          id: "m3l2",
          title: "–ê—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π –∏ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏",
          type: "interactive",
          duration: 30,
          difficulty: 3,
          completed: false,
          progress: 0,
          concepts: ["args", "kwargs", "scope", "namespaces"],
          prerequisites: ["m3l1"]
        },
        {
          id: "m3l3",
          title: "–ú–æ–¥—É–ª–∏ –∏ –ø–∞–∫–µ—Ç—ã",
          type: "video",
          duration: 25,
          difficulty: 2,
          completed: false,
          progress: 0,
          concepts: ["modules", "imports", "packages", "pip"],
          prerequisites: ["m3l2"]
        },
        {
          id: "m3l4",
          title: "–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è",
          type: "interactive",
          duration: 40,
          difficulty: 3,
          completed: false,
          progress: 0,
          concepts: ["module-creation", "distribution", "documentation"],
          prerequisites: ["m3l3"]
        },
        {
          id: "m3l5",
          title: "–§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç: –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ç–µ–∫—Å—Ç–∞",
          type: "interactive",
          duration: 60,
          difficulty: 3,
          completed: false,
          progress: 0,
          concepts: ["project", "text-analysis", "package-usage"],
          prerequisites: ["m3l1", "m3l2", "m3l3", "m3l4"]
        }
      ]
    }
  ],
  learningPath: [
    "m1l1", "m1l2", "m1l3", "m1l4", "m1l5", 
    "m2l1", "m2l2", "m2l3", "m2l4",
    "m3l1", "m3l2", "m3l3", "m3l4", "m3l5"
  ],
  adaptivePath: [] // –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ AI –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
};

const SAMPLE_USER_PROFILE: UserProfile = {
  learningStyle: 'visual',
  strengths: ['visual-learning', 'pattern-recognition'],
  weaknesses: ['abstract-concepts', 'mathematical-notation'],
  preferredPace: 'medium',
  background: ['high-school-math', 'basic-computer-usage'],
  goals: ['career-change', 'data-science-basics'],
  interests: ['automation', 'data-analysis', 'ai-applications']
};

const NOVA_ASSISTANT: AIAssistant = {
  name: "NOVA",
  avatar: "üë©‚ÄçüöÄ",
  specialty: "Python –∏ –æ—Å–Ω–æ–≤—ã AI",
  personality: "–¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∞—è, —Ç–µ—Ä–ø–µ–ª–∏–≤–∞—è",
  messages: [
    {
      id: "welcome-1",
      sender: "ai",
      text: "–ü—Ä–∏–≤–µ—Ç! –Ø NOVA, —Ç–≤–æ–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤ –∏–∑—É—á–µ–Ω–∏–∏ –æ—Å–Ω–æ–≤ Python –∏ AI. –Ø –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤—Å–µ–≥–æ –∫—É—Ä—Å–∞. –ö–∞–∫–æ–π —É —Ç–µ–±—è –æ–ø—ã—Ç –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏?",
      timestamp: new Date(),
      type: "info"
    }
  ]
};

const CODING_MENTOR: AIAssistant = {
  name: "CodeMaster",
  avatar: "üë®‚Äçüíª",
  specialty: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ª–∞–¥–∫–∞",
  personality: "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π, —Ç–æ—á–Ω—ã–π, –ø–æ–¥—Ä–æ–±–Ω—ã–π",
  messages: [
    {
      id: "coding-welcome-1",
      sender: "ai",
      text: "–ü—Ä–∏–≤–µ—Ç! –Ø CodeMaster, —Ç–≤–æ–π –º–µ–Ω—Ç–æ—Ä –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é. –Ø –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏ –∏ –æ—Ç–ª–∞–¥–∫–æ–π –∫–æ–¥–∞. –û–±—Ä–∞—â–∞–π—Å—è, –∫–æ–≥–¥–∞ —Å—Ç–æ–ª–∫–Ω–µ—à—å—Å—è —Å —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ –≤ –∫–æ–¥–µ.",
      timestamp: new Date(),
      type: "info"
    }
  ]
};

const CONCEPT_TUTOR: AIAssistant = {
  name: "–ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä",
  avatar: "üß†",
  specialty: "–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è",
  personality: "–∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π, –≥–ª—É–±–æ–∫–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞–Ω–∞–ª–æ–≥–∏–∏",
  messages: [
    {
      id: "concept-welcome-1",
      sender: "ai",
      text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, —è –ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä. –ú–æ—è —Ä–æ–ª—å ‚Äî –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –ø–æ–Ω—è—Ç—å —Å–ª–æ–∂–Ω—ã–µ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏. –Ø –æ–±—ä—è—Å–Ω—é –ª—é–±—É—é –∏–¥–µ—é –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –∏ –ø—Ä–∏–≤–µ–¥—É –Ω–∞–≥–ª—è–¥–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã.",
      timestamp: new Date(),
      type: "info"
    }
  ]
};

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—É—Ç–∏ –æ–±—É—á–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –ò–ò
const generateAdaptivePath = (course: Course, userProfile: UserProfile) => {
  // –ó–¥–µ—Å—å –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±—ã–ª –±—ã –≤—ã–∑–æ–≤ OpenAI API
  // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω–µ–º –±–∞–∑–æ–≤—ã–π –ø—É—Ç—å
  return [...course.learningPath];
};

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫—É—Ä—Å–∞
export default function CourseAI() {
  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –º—ã –±—ã –ø–æ–ª—É—á–∞–ª–∏ id –∫—É—Ä—Å–∞ –∏–∑ URL
  const params = useParams<{ courseId: string }>();
  const courseId = params?.courseId || "python-for-ai-beginners";
  const [, setLocation] = useLocation();
  
  // State –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  const [course, setCourse] = useState<Course>(SAMPLE_COURSE);
  const [userProfile, setUserProfile] = useState<UserProfile>(SAMPLE_USER_PROFILE);
  const [currentAssistant, setCurrentAssistant] = useState<AIAssistant>(NOVA_ASSISTANT);
  const [availableAssistants, setAvailableAssistants] = useState<AIAssistant[]>(
    [NOVA_ASSISTANT, CODING_MENTOR, CONCEPT_TUTOR]
  );
  const [currentModuleIndex, setCurrentModuleIndex] = useState(0);
  const [currentLessonIndex, setCurrentLessonIndex] = useState(0);
  const [activeTab, setActiveTab] = useState<'content' | 'assistant' | 'resources'>('content');
  
  // –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥ –∫—É—Ä—Å–æ–≤
  const goToCoursesCatalog = () => {
    setLocation("/courses");
  };
  const [userInput, setUserInput] = useState("");
  const [isTyping, setIsTyping] = useState(false);
  const [showLessonComplete, setShowLessonComplete] = useState(false);
  const [hasOpenAIKey, setHasOpenAIKey] = useState(false);
  
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const { toast } = useToast();

  // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ —á–∞—Ç–∞ –≤–Ω–∏–∑ –ø—Ä–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
  useEffect(() => {
    if (messagesEndRef.current) {
      messagesEndRef.current.scrollIntoView({ behavior: "smooth" });
    }
  }, [currentAssistant.messages]);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è API –∫–ª—é—á–∞ OpenAI
  useEffect(() => {
    const checkAPIKey = async () => {
      const result = await check_secrets(['OPENAI_API_KEY']);
      setHasOpenAIKey(result.includes('OPENAI_API_KEY'));
      
      if (!result.includes('OPENAI_API_KEY')) {
        toast({
          title: "–¢—Ä–µ–±—É–µ—Ç—Å—è API –∫–ª—é—á OpenAI",
          description: "–î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º OpenAI API –∫–ª—é—á",
          variant: "destructive"
        });
      }
    };
    
    checkAPIKey();
  }, [toast]);

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –ø—É—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    if (course && userProfile) {
      const adaptivePath = generateAdaptivePath(course, userProfile);
      setCourse(prev => ({...prev, adaptivePath}));
    }
  }, []);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É
  const handleSendMessage = async () => {
    if (!userInput.trim()) return;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userMessage: AIMessage = {
      id: `user-${Date.now()}`,
      sender: 'user',
      text: userInput,
      timestamp: new Date(),
      type: 'question'
    };
    
    setCurrentAssistant(prev => ({
      ...prev,
      messages: [...prev.messages, userMessage]
    }));
    
    setUserInput("");
    setIsTyping(true);
    
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å –ø–æ–º–æ—â—å—é OpenAI
    setTimeout(() => {
      let aiResponse: AIMessage;
      
      if (hasOpenAIKey) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –≤—ã–∑–æ–≤ API OpenAI
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        aiResponse = {
          id: `ai-${Date.now()}`,
          sender: 'ai',
          text: generateSampleResponse(userInput, currentAssistant.name),
          timestamp: new Date(),
          type: 'answer'
        };
      } else {
        // –û—Ç–≤–µ—Ç –±–µ–∑ AI
        aiResponse = {
          id: `ai-${Date.now()}`,
          sender: 'ai',
          text: "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è OpenAI API –∫–ª—é—á. –ü–æ–∫–∞ —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ —Ç–µ–∫—É—â–µ–º—É —É—Ä–æ–∫—É.",
          timestamp: new Date(),
          type: 'info'
        };
      }
      
      setCurrentAssistant(prev => ({
        ...prev,
        messages: [...prev.messages, aiResponse]
      }));
      
      setIsTyping(false);
    }, 1500);
  };

  // –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const generateSampleResponse = (input: string, assistantName: string) => {
    const lowercaseInput = input.toLowerCase();
    
    if (lowercaseInput.includes("–ø—Ä–∏–≤–µ—Ç") || lowercaseInput.includes("–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π")) {
      return `–ü—Ä–∏–≤–µ—Ç! –Ø ${assistantName}. –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞?`;
    }
    
    if (lowercaseInput.includes("—Ç—Ä—É–¥–Ω–æ") || lowercaseInput.includes("—Å–ª–æ–∂–Ω–æ") || lowercaseInput.includes("–Ω–µ –ø–æ–Ω–∏–º–∞—é")) {
      return "–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∏—Å–ø—ã—Ç—ã–≤–∞—Ç—å —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∏–∑—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä–µ–º –ø—Ä–æ–±–ª–µ–º—É –ø–æ —à–∞–≥–∞–º. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏–µ?";
    }
    
    if (lowercaseInput.includes("python") || lowercaseInput.includes("–ø–∏—Ç–æ–Ω")) {
      return "Python - —ç—Ç–æ –º–æ—â–Ω—ã–π, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –¥–æ—Å—Ç—É–ø–Ω—ã–π –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –û–Ω —à–∏—Ä–æ–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ AI –∏ data science –±–ª–∞–≥–æ–¥–∞—Ä—è –±–æ–ª—å—à–æ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫.";
    }
    
    if (lowercaseInput.includes("—Ñ—É–Ω–∫—Ü–∏")) {
      return "–§—É–Ω–∫—Ü–∏–∏ –≤ Python - —ç—Ç–æ –±–ª–æ–∫–∏ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏—Ö –≤—ã–∑–æ–≤–µ. –û–Ω–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –∏ –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π. –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏: \n\n```python\ndef greet(name):\n    return f'–ü—Ä–∏–≤–µ—Ç, {name}!'\n\nprint(greet('–ê–Ω–¥—Ä–µ–π'))\n```";
    }
    
    if (lowercaseInput.includes("–ø–µ—Ä–µ–º–µ–Ω–Ω")) {
      return "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Python —Å–æ–∑–¥–∞—é—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä: `x = 5` —Å–æ–∑–¥–∞—Å—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é x —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 5. Python –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö.";
    }
    
    if (lowercaseInput.includes("—Ü–∏–∫–ª")) {
      return "–í Python –µ—Å—Ç—å –¥–≤–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–∞ —Ü–∏–∫–ª–æ–≤: for –∏ while. –¶–∏–∫–ª for –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (—Å–ø–∏—Å–æ–∫, –∫–æ—Ä—Ç–µ–∂, —Å—Ç—Ä–æ–∫–∞), –∞ while –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø–æ–∫–∞ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ. –ü—Ä–∏–º–µ—Ä for-—Ü–∏–∫–ª–∞: \n\n```python\nfor i in range(5):\n    print(i)  # –í—ã–≤–µ–¥–µ—Ç —á–∏—Å–ª–∞ –æ—Ç 0 –¥–æ 4\n```";
    }
    
    // –û–±—â–∏–π –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ
    return "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º—Å—è –≤ —ç—Ç–æ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ. –ú–æ–∂–µ—à—å —É—Ç–æ—á–Ω–∏—Ç—å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞?";
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞–º–∏
  const switchAssistant = (assistant: AIAssistant) => {
    setCurrentAssistant(assistant);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞
  const completeLesson = () => {
    const updatedCourse = {...course};
    const currentModule = updatedCourse.modules[currentModuleIndex];
    const currentLesson = currentModule.lessons[currentLessonIndex];
    
    // –û—Ç–º–µ—á–∞–µ–º —É—Ä–æ–∫ –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π
    currentLesson.completed = true;
    currentLesson.progress = 100;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –º–æ–¥—É–ª—è
    const completedLessonsCount = currentModule.lessons.filter(l => l.completed).length;
    currentModule.progress = Math.round((completedLessonsCount / currentModule.lessons.length) * 100);
    
    // –ï—Å–ª–∏ –≤—Å–µ —É—Ä–æ–∫–∏ –≤ –º–æ–¥—É–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, –æ—Ç–º–µ—á–∞–µ–º –º–æ–¥—É–ª—å –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π
    if (completedLessonsCount === currentModule.lessons.length) {
      currentModule.completed = true;
    }
    
    setCourse(updatedCourse);
    setShowLessonComplete(true);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    const aiMessage: AIMessage = {
      id: `completion-${Date.now()}`,
      sender: 'ai',
      text: `–û—Ç–ª–∏—á–Ω–æ! –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ —É—Ä–æ–∫ "${currentLesson.title}". –ì–æ—Ç–æ–≤—ã –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ?`,
      timestamp: new Date(),
      type: 'success'
    };
    
    setCurrentAssistant(prev => ({
      ...prev,
      messages: [...prev.messages, aiMessage]
    }));
  };

  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É
  const goToNextLesson = () => {
    const currentModule = course.modules[currentModuleIndex];
    
    if (currentLessonIndex < currentModule.lessons.length - 1) {
      // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É –≤ —Ç–æ–º –∂–µ –º–æ–¥—É–ª–µ
      setCurrentLessonIndex(currentLessonIndex + 1);
    } else if (currentModuleIndex < course.modules.length - 1) {
      // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–µ—Ä–≤–æ–º—É —É—Ä–æ–∫—É —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–æ–¥—É–ª—è
      setCurrentModuleIndex(currentModuleIndex + 1);
      setCurrentLessonIndex(0);
    } else {
      // –ö—É—Ä—Å –∑–∞–≤–µ—Ä—à–µ–Ω
      toast({
        title: "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!",
        description: "–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –≤–µ—Å—å –∫—É—Ä—Å!",
        variant: "default"
      });
    }
    
    setShowLessonComplete(false);
    setActiveTab('content'); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É —É—Ä–æ–∫–∞
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–∫–µ
  const getCurrentLesson = (): Lesson | null => {
    if (!course || 
        !course.modules[currentModuleIndex] || 
        !course.modules[currentModuleIndex].lessons[currentLessonIndex]) {
      return null;
    }
    
    return course.modules[currentModuleIndex].lessons[currentLessonIndex];
  };

  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —É—Ä–æ–∫–∞
  const renderLessonContent = (lesson: Lesson) => {
    switch (lesson.type) {
      case 'text':
        return (
          <div className="prose prose-invert max-w-none">
            <h2>–ß—Ç–æ —Ç–∞–∫–æ–µ Python –∏ –ø–æ—á–µ–º—É –æ–Ω –≤–∞–∂–µ–Ω –¥–ª—è AI</h2>
            <p>Python ‚Äî —ç—Ç–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º—ã–π, –≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π, —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–ª —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º –≤ –æ–±–ª–∞—Å—Ç–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞, –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö. –û–Ω –±—ã–ª —Å–æ–∑–¥–∞–Ω –ì–≤–∏–¥–æ –≤–∞–Ω –†–æ—Å—Å—É–º–æ–º –≤ 1991 –≥–æ–¥—É –∏ —Å —Ç–µ—Ö –ø–æ—Ä –ø—Ä–∏–æ–±—Ä–µ–ª –æ–≥—Ä–æ–º–Ω—É—é –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–≤–æ–µ–π –ø—Ä–æ—Å—Ç–æ—Ç–µ, —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∏ –æ–±—à–∏—Ä–Ω–æ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ –±–∏–±–ª–∏–æ—Ç–µ–∫.</p>
            
            <h3>–ü–æ—á–µ–º—É Python —Å—Ç–∞–ª –∫–ª—é—á–µ–≤—ã–º —è–∑—ã–∫–æ–º –¥–ª—è AI?</h3>
            <ol>
              <li><strong>–ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º–æ—Å—Ç—å</strong> ‚Äî Python –∏–º–µ–µ—Ç —á–∏—Å—Ç—ã–π –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–≥–æ –∏–¥–µ–∞–ª—å–Ω—ã–º —è–∑—ã–∫–æ–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.</li>
              <li><strong>–ë–æ–≥–∞—Ç–∞—è —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫</strong> ‚Äî NumPy, Pandas, TensorFlow, PyTorch, scikit-learn –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –≥–æ—Ç–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π.</li>
              <li><strong>–®–∏—Ä–æ–∫–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ</strong> ‚Äî –æ–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É—é—Ç Python, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –æ–±—à–∏—Ä–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é, —É—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É.</li>
              <li><strong>–ì–∏–±–∫–æ—Å—Ç—å</strong> ‚Äî Python –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Å–∞–º—ã—Ö —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á: –æ—Ç –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –∏–≥—Ä.</li>
            </ol>
            
            <h3>–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ Python –≤ AI –∏ Data Science:</h3>
            <ul>
              <li>–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑ –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö</li>
              <li>–°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è</li>
              <li>–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞</li>
              <li>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤</li>
              <li>–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π</li>
            </ul>
            
            <p>–í —ç—Ç–æ–º –∫—É—Ä—Å–µ –º—ã –Ω–∞—á–Ω–µ–º —Å —Å–∞–º—ã—Ö –æ—Å–Ω–æ–≤ Python, –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥—è –∫ –µ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ AI –∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.</p>
          </div>
        );
      
      case 'video':
        return (
          <div className="flex flex-col space-y-4">
            <div className="aspect-video bg-space-800 rounded-lg flex items-center justify-center">
              <div className="text-center p-8">
                <i className="fas fa-play-circle text-6xl text-primary/70 mb-4"></i>
                <p className="text-white/70">–í–∏–¥–µ–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏</p>
              </div>
            </div>
            <div className="prose prose-invert max-w-none">
              <h3>–û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –∏–∑ –≤–∏–¥–µ–æ:</h3>
              <ul>
                <li>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ python.org</li>
                <li>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (IDE) ‚Äì PyCharm –∏–ª–∏ VS Code</li>
                <li>–ó–∞–ø—É—Å–∫ Python –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏</li>
                <li>–ù–∞–ø–∏—Å–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã "Hello, World!"</li>
                <li>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Python –≤ —Ä–µ–∂–∏–º–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Å–æ–ª–∏</li>
              </ul>
            </div>
          </div>
        );
      
      case 'interactive':
        return (
          <div className="flex flex-col space-y-6">
            <div className="prose prose-invert max-w-none">
              <h2>–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö</h2>
              <p>–í Python –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ –º–æ–º–µ–Ω—Ç –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è. –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.</p>
              
              <h3>–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:</h3>
              <ul>
                <li><strong>int</strong> - —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5, -10)</li>
                <li><strong>float</strong> - —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, 3.14, -0.001)</li>
                <li><strong>str</strong> - —Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!")</li>
                <li><strong>bool</strong> - –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è (True –∏–ª–∏ False)</li>
                <li><strong>list</strong> - —Å–ø–∏—Å–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, [1, 2, 3])</li>
                <li><strong>dict</strong> - —Å–ª–æ–≤–∞—Ä–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, {`{"name": "Anna"}`})</li>
              </ul>
            </div>
            
            <div className="bg-space-900 rounded-lg p-4">
              <div className="flex justify-between items-center mb-3">
                <h3 className="text-lg font-semibold">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞</h3>
                <div className="flex space-x-2">
                  <button className="px-3 py-1 bg-space-700 hover:bg-space-600 rounded-md text-sm transition">
                    –ó–∞–ø—É—Å—Ç–∏—Ç—å
                  </button>
                  <button className="px-3 py-1 bg-primary/20 hover:bg-primary/30 text-primary-foreground rounded-md text-sm transition">
                    –ü–æ–¥—Å–∫–∞–∑–∫–∞
                  </button>
                </div>
              </div>
              
              <div className="font-mono text-sm bg-space-950 p-4 rounded-md h-64 overflow-y-auto">
                <div className="text-gray-400"># –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö</div>
                <div className="text-white">
                  <div>number = 42</div>
                  <div>pi = 3.1415</div>
                  <div>name = "Python"</div>
                  <div>is_awesome = True</div>
                  <div>fruits = ["apple", "banana", "cherry"]</div>
                  <div>person = {`{"name": "–ê–Ω–Ω–∞", "age": 25}`}</div>
                  <div> </div>
                  <div># –í—ã–≤–µ–¥–∏—Ç–µ —Ç–∏–ø—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É—è —Ñ—É–Ω–∫—Ü–∏—é type()</div>
                  <div>print(type(number))</div>
                  <div>print(type(pi))</div>
                  <div>print(type(name))</div>
                  <div>print(type(is_awesome))</div>
                  <div>print(type(fruits))</div>
                  <div>print(type(person))</div>
                </div>
              </div>
            </div>
            
            <div className="bg-space-900 rounded-lg p-4">
              <h3 className="text-lg font-semibold mb-2">–ó–∞–¥–∞–Ω–∏–µ:</h3>
              <p className="mb-3">–°–æ–∑–¥–∞–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—É–¥–µ–Ω—Ç–µ: –∏–º—è, –≤–æ–∑—Ä–∞—Å—Ç, —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –∏ —Å–ø–∏—Å–æ–∫ –∏–∑—É—á–∞–µ–º—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤.</p>
              
              <div className="font-mono text-sm bg-space-950 p-4 rounded-md h-40 overflow-y-auto">
                <div className="text-gray-400"># –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—É–¥–µ–Ω—Ç–µ</div>
                <div className="text-white">
                  <div>student_name = </div>
                  <div>student_age = </div>
                  <div>gpa = </div>
                  <div>subjects = </div>
                  <div> </div>
                  <div># –í—ã–≤–µ–¥–∏—Ç–µ —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –æ–¥–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è f-—Å—Ç—Ä–æ–∫–∏</div>
                  <div>print(f"...")</div>
                </div>
              </div>
            </div>
          </div>
        );
      
      case 'quiz':
        return (
          <div className="flex flex-col space-y-6">
            <div className="prose prose-invert max-w-none">
              <h2>–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π: –æ—Å–Ω–æ–≤—ã Python</h2>
              <p>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –æ—Å–Ω–æ–≤ Python.</p>
            </div>
            
            <div className="space-y-6">
              <div className="bg-space-900 rounded-lg p-4">
                <h3 className="font-medium mb-3">1. –ö–∞–∫–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤ Python?</h3>
                <div className="space-y-2">
                  <div className="flex items-center space-x-2">
                    <input type="radio" id="q1a" name="q1" className="w-4 h-4" />
                    <label htmlFor="q1a">var x = 10;</label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <input type="radio" id="q1b" name="q1" className="w-4 h-4" />
                    <label htmlFor="q1b">x := 10</label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <input type="radio" id="q1c" name="q1" className="w-4 h-4" />
                    <label htmlFor="q1c">x = 10</label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <input type="radio" id="q1d" name="q1" className="w-4 h-4" />
                    <label htmlFor="q1d">let x = 10</label>
                  </div>
                </div>
              </div>
              
              <div className="bg-space-900 rounded-lg p-4">
                <h3 className="font-medium mb-3">2. –ö–∞–∫–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –∏–º–µ—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è x –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: x = 5 / 2?</h3>
                <div className="space-y-2">
                  <div className="flex items-center space-x-2">
                    <input type="radio" id="q2a" name="q2" className="w-4 h-4" />
                    <label htmlFor="q2a">int</label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <input type="radio" id="q2b" name="q2" className="w-4 h-4" />
                    <label htmlFor="q2b">float</label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <input type="radio" id="q2c" name="q2" className="w-4 h-4" />
                    <label htmlFor="q2c">str</label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <input type="radio" id="q2d" name="q2" className="w-4 h-4" />
                    <label htmlFor="q2d">bool</label>
                  </div>
                </div>
              </div>
              
              <div className="bg-space-900 rounded-lg p-4">
                <h3 className="font-medium mb-3">3. –ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ–¥–∞?</h3>
                <pre className="bg-space-950 p-3 rounded-md mb-3 overflow-x-auto">
                  <code>
                    fruits = ["apple", "banana", "cherry"] <br/>
                    print(fruits[1])
                  </code>
                </pre>
                <div className="space-y-2">
                  <div className="flex items-center space-x-2">
                    <input type="radio" id="q3a" name="q3" className="w-4 h-4" />
                    <label htmlFor="q3a">apple</label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <input type="radio" id="q3b" name="q3" className="w-4 h-4" />
                    <label htmlFor="q3b">banana</label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <input type="radio" id="q3c" name="q3" className="w-4 h-4" />
                    <label htmlFor="q3c">cherry</label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <input type="radio" id="q3d" name="q3" className="w-4 h-4" />
                    <label htmlFor="q3d">–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</label>
                  </div>
                </div>
              </div>
            </div>
            
            <div className="flex justify-end">
              <button
                onClick={completeLesson}
                className="px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary/80 transition"
              >
                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç—ã
              </button>
            </div>
          </div>
        );
        
      default:
        return (
          <div className="text-center py-8">
            <p className="text-white/70">–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —É—Ä–æ–∫–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...</p>
          </div>
        );
    }
  };

  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–∫–µ
  const renderLessonInfo = (lesson: Lesson) => {
    const lessonTypeIcon = {
      'video': 'fa-video',
      'text': 'fa-file-alt',
      'quiz': 'fa-tasks',
      'interactive': 'fa-laptop-code'
    }[lesson.type];
    
    const difficultyText = {
      1: '–ù–∞—á–∞–ª—å–Ω—ã–π',
      2: '–°—Ä–µ–¥–Ω–∏–π',
      3: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π'
    }[lesson.difficulty];
    
    return (
      <div className="flex items-center justify-between bg-space-900/70 rounded-lg p-3 mb-6">
        <div className="flex items-center">
          <div className="w-10 h-10 rounded-full bg-space-800 flex items-center justify-center mr-3">
            <i className={`fas ${lessonTypeIcon} text-primary/70`}></i>
          </div>
          <div>
            <div className="text-sm text-white/50">–¢–∏–ø —É—Ä–æ–∫–∞</div>
            <div className="font-medium capitalize">
              {lesson.type === 'video' ? '–í–∏–¥–µ–æ' : 
               lesson.type === 'text' ? '–¢–µ–∫—Å—Ç' : 
               lesson.type === 'quiz' ? '–¢–µ—Å—Ç' : 
               '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π'}
            </div>
          </div>
        </div>
        
        <div className="flex items-center">
          <div className="w-10 h-10 rounded-full bg-space-800 flex items-center justify-center mr-3">
            <i className="fas fa-clock text-secondary/70"></i>
          </div>
          <div>
            <div className="text-sm text-white/50">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</div>
            <div className="font-medium">{lesson.duration} –º–∏–Ω.</div>
          </div>
        </div>
        
        <div className="flex items-center">
          <div className="w-10 h-10 rounded-full bg-space-800 flex items-center justify-center mr-3">
            <i className="fas fa-chart-line text-accent/70"></i>
          </div>
          <div>
            <div className="text-sm text-white/50">–°–ª–æ–∂–Ω–æ—Å—Ç—å</div>
            <div className="font-medium">{difficultyText}</div>
          </div>
        </div>
      </div>
    );
  };

  // –†–µ–Ω–¥–µ—Ä —Ä–∞–∑–¥–µ–ª–∞ –º–æ–¥—É–ª–µ–π –∏ —É—Ä–æ–∫–æ–≤
  const renderModules = () => {
    return (
      <div className="bg-space-900 rounded-lg p-4 h-[calc(100vh-12rem)] overflow-y-auto">
        <h2 className="text-xl font-semibold mb-4">–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∫—É—Ä—Å–∞</h2>
        <div className="space-y-6">
          {course.modules.map((module, moduleIdx) => (
            <div key={module.id} className="space-y-2">
              <div 
                className={`font-medium py-2 px-3 rounded-lg flex items-center justify-between cursor-pointer ${
                  moduleIdx === currentModuleIndex ? 'bg-primary/20 text-primary' : 'hover:bg-space-800'
                }`}
                onClick={() => setCurrentModuleIndex(moduleIdx)}
              >
                <div className="flex items-center">
                  <div 
                    className={`w-6 h-6 rounded-full mr-2 flex items-center justify-center text-xs ${
                      module.completed ? 'bg-green-500/20 text-green-400' : 'bg-white/10 text-white/70'
                    }`}
                  >
                    {module.completed ? <i className="fas fa-check"></i> : moduleIdx + 1}
                  </div>
                  <span>{module.title}</span>
                </div>
                <div className="flex items-center">
                  <div className="text-xs text-white/50 mr-2">{module.progress}%</div>
                  <div className="w-12 h-1.5 bg-white/10 rounded-full">
                    <div 
                      className="h-full bg-primary rounded-full"
                      style={{ width: `${module.progress}%` }}
                    ></div>
                  </div>
                </div>
              </div>
              
              {moduleIdx === currentModuleIndex && (
                <div className="pl-8 space-y-1">
                  {module.lessons.map((lesson, lessonIdx) => (
                    <div 
                      key={lesson.id}
                      className={`py-2 px-3 rounded-lg flex items-center text-sm cursor-pointer ${
                        lessonIdx === currentLessonIndex ? 'bg-space-700 text-white' : 'hover:bg-space-800/50 text-white/70'
                      }`}
                      onClick={() => setCurrentLessonIndex(lessonIdx)}
                    >
                      <div 
                        className={`w-5 h-5 rounded-full mr-2 flex items-center justify-center text-xs ${
                          lesson.completed ? 'bg-green-500/20 text-green-400' : 'bg-white/10 text-white/50'
                        }`}
                      >
                        {lesson.completed ? <i className="fas fa-check"></i> : lessonIdx + 1}
                      </div>
                      <span className="flex-1">{lesson.title}</span>
                      <span className="text-xs text-white/40">
                        {lesson.type === 'video' ? <i className="fas fa-video"></i> : 
                         lesson.type === 'text' ? <i className="fas fa-file-alt"></i> : 
                         lesson.type === 'quiz' ? <i className="fas fa-tasks"></i> : 
                         <i className="fas fa-laptop-code"></i>}
                      </span>
                    </div>
                  ))}
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    );
  };

  // –ì–ª–∞–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫—É—Ä—Å–∞
  return (
    <DashboardLayout title="" subtitle="">
      <div className="flex flex-col space-y-6">
        {/* –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞ */}
        <div>
          <div className="flex items-center text-sm text-white/50 mb-2">
            <span 
              className="hover:text-white cursor-pointer transition" 
              onClick={() => setLocation("/courses")}
            >
              –ö—É—Ä—Å—ã
            </span>
            <i className="fas fa-chevron-right text-xs mx-2"></i>
            <span className="text-white">{course.title}</span>
          </div>
          
          <div className="flex justify-between items-start">
            <div>
              <h1 className="text-2xl md:text-3xl font-bold">{course.title}</h1>
              <p className="text-white/70 mt-1 max-w-2xl">{course.description}</p>
            </div>
            
            <div className="flex items-center space-x-3">
              <button
                onClick={goToCoursesCatalog}
                className="flex items-center gap-2 bg-space-800 hover:bg-space-700 text-white px-3 py-2 rounded-lg transition-all"
              >
                <i className="fas fa-arrow-left"></i>
                <span>–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫—É—Ä—Å–∞–º</span>
              </button>
              
              <div className="flex items-center bg-space-900/70 rounded-lg px-3 py-1.5">
                <span 
                  className={`px-2 py-0.5 rounded text-xs font-medium ${
                    course.level === 'beginner' ? 'bg-green-500/20 text-green-400' :
                    course.level === 'intermediate' ? 'bg-blue-500/20 text-blue-400' :
                    'bg-purple-500/20 text-purple-400'
                  }`}
                >
                  {course.level === 'beginner' ? '–ù–∞—á–∏–Ω–∞—é—â–∏–π' :
                   course.level === 'intermediate' ? '–°—Ä–µ–¥–Ω–∏–π' : '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π'}
                </span>
                <div className="mx-2 text-white/30">‚Ä¢</div>
                <span className="text-white/70 text-sm">{course.duration} —á–∞—Å–æ–≤</span>
              </div>
            </div>
          </div>
        </div>
        
        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
          {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –º–æ–¥—É–ª–∏ –∫—É—Ä—Å–∞ */}
          <div className="lg:col-span-1">
            {renderModules()}
          </div>
          
          {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —É—Ä–æ–∫–∞ –∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç */}
          <div className="lg:col-span-3">
            {/* –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞ */}
            {getCurrentLesson() && (
              <div className="mb-4">
                <h2 className="text-xl font-semibold">
                  {course.modules[currentModuleIndex].title}: {getCurrentLesson()?.title}
                </h2>
              </div>
            )}
            
            {/* –í–∫–ª–∞–¥–∫–∏ */}
            <div className="flex border-b border-white/10 mb-6">
              <button 
                className={`py-2 px-4 text-sm font-medium ${activeTab === 'content' ? 'text-primary border-b-2 border-primary' : 'text-white/50 hover:text-white'}`}
                onClick={() => setActiveTab('content')}
              >
                <i className="fas fa-book-open mr-2"></i>
                –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞
              </button>
              <button 
                className={`py-2 px-4 text-sm font-medium ${activeTab === 'assistant' ? 'text-primary border-b-2 border-primary' : 'text-white/50 hover:text-white'}`}
                onClick={() => setActiveTab('assistant')}
              >
                <i className="fas fa-robot mr-2"></i>
                AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç
              </button>
              <button 
                className={`py-2 px-4 text-sm font-medium ${activeTab === 'resources' ? 'text-primary border-b-2 border-primary' : 'text-white/50 hover:text-white'}`}
                onClick={() => setActiveTab('resources')}
              >
                <i className="fas fa-link mr-2"></i>
                –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
              </button>
            </div>
            
            {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ */}
            <div className="bg-space-800/50 rounded-xl p-6">
              {activeTab === 'content' && getCurrentLesson() && (
                <div className="space-y-6">
                  {renderLessonInfo(getCurrentLesson()!)}
                  {renderLessonContent(getCurrentLesson()!)}
                  
                  <div className="flex justify-between mt-6">
                    <button 
                      className="px-4 py-2 bg-space-700 text-white/80 rounded-lg hover:bg-space-600 transition flex items-center"
                      onClick={() => {
                        if (currentLessonIndex > 0) {
                          setCurrentLessonIndex(currentLessonIndex - 1);
                        } else if (currentModuleIndex > 0) {
                          setCurrentModuleIndex(currentModuleIndex - 1);
                          setCurrentLessonIndex(course.modules[currentModuleIndex - 1].lessons.length - 1);
                        }
                      }}
                      disabled={currentModuleIndex === 0 && currentLessonIndex === 0}
                    >
                      <i className="fas fa-arrow-left mr-2"></i>
                      –ü—Ä–µ–¥—ã–¥—É—â–∏–π —É—Ä–æ–∫
                    </button>
                    
                    {!getCurrentLesson()?.completed ? (
                      <button 
                        className="px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary/80 transition"
                        onClick={completeLesson}
                      >
                        –ó–∞–≤–µ—Ä—à–∏—Ç—å —É—Ä–æ–∫
                        <i className="fas fa-check ml-2"></i>
                      </button>
                    ) : (
                      <button 
                        className="px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary/80 transition flex items-center"
                        onClick={goToNextLesson}
                      >
                        –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫
                        <i className="fas fa-arrow-right ml-2"></i>
                      </button>
                    )}
                  </div>
                </div>
              )}
              
              {activeTab === 'assistant' && (
                <div className="space-y-4">
                  <div className="flex space-x-2 mb-4 overflow-x-auto pb-2">
                    {availableAssistants.map((assistant) => (
                      <button
                        key={assistant.name}
                        className={`px-3 py-1.5 rounded-full text-sm whitespace-nowrap flex items-center ${
                          currentAssistant.name === assistant.name
                            ? 'bg-primary/20 text-primary border border-primary/30'
                            : 'bg-space-700 text-white/70 hover:bg-space-600 border border-transparent'
                        }`}
                        onClick={() => switchAssistant(assistant)}
                      >
                        <span className="mr-1.5">{assistant.avatar}</span>
                        {assistant.name}
                      </button>
                    ))}
                  </div>
                  
                  <Glassmorphism className="p-4 rounded-xl h-96 flex flex-col">
                    <div className="flex items-center space-x-2 pb-3 border-b border-white/10 mb-3">
                      <div className="w-8 h-8 rounded-full bg-primary/20 flex items-center justify-center text-lg">
                        {currentAssistant.avatar}
                      </div>
                      <div>
                        <div className="font-medium">{currentAssistant.name}</div>
                        <div className="text-xs text-white/50">{currentAssistant.specialty}</div>
                      </div>
                    </div>
                    
                    <div className="flex-1 overflow-y-auto mb-3 pr-2">
                      {currentAssistant.messages.map((msg) => (
                        <div 
                          key={msg.id} 
                          className={`mb-3 flex ${msg.sender === 'ai' ? 'justify-start' : 'justify-end'}`}
                        >
                          <div 
                            className={`max-w-[80%] rounded-xl p-3 ${
                              msg.sender === 'ai' 
                                ? 'bg-space-700 text-white rounded-tl-none' 
                                : 'bg-primary/20 text-white rounded-tr-none'
                            } ${
                              msg.type === 'error' ? 'bg-red-900/60 border border-red-500/50' :
                              msg.type === 'success' ? 'bg-green-900/60 border border-green-500/50' :
                              msg.type === 'info' ? 'bg-blue-900/60 border border-blue-500/50' : ''
                            }`}
                          >
                            <div className="whitespace-pre-wrap">{msg.text}</div>
                            <div className="text-right mt-1">
                              <span className="text-xs text-white/40">
                                {new Date(msg.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}
                              </span>
                            </div>
                          </div>
                        </div>
                      ))}
                      
                      {isTyping && (
                        <div className="flex justify-start mb-3">
                          <div className="bg-space-700 rounded-xl p-3 rounded-tl-none max-w-[80%]">
                            <div className="flex space-x-1">
                              <div className="w-2 h-2 rounded-full bg-white/50 animate-bounce"></div>
                              <div className="w-2 h-2 rounded-full bg-white/50 animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                              <div className="w-2 h-2 rounded-full bg-white/50 animate-bounce" style={{ animationDelay: '0.4s' }}></div>
                            </div>
                          </div>
                        </div>
                      )}
                      
                      <div ref={messagesEndRef}></div>
                    </div>
                    
                    <div className="flex items-center space-x-2">
                      <input 
                        type="text"
                        value={userInput}
                        onChange={(e) => setUserInput(e.target.value)}
                        onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                        placeholder={`–°–ø—Ä–æ—Å–∏—Ç–µ ${currentAssistant.name} –æ —á–µ–º —É–≥–æ–¥–Ω–æ...`}
                        className="flex-1 bg-space-900 border border-white/10 rounded-lg px-4 py-2 focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary"
                      />
                      <button 
                        onClick={handleSendMessage}
                        disabled={!userInput.trim()}
                        className="w-10 h-10 rounded-full bg-primary text-white flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed"
                      >
                        <i className="fas fa-paper-plane"></i>
                      </button>
                    </div>
                  </Glassmorphism>
                  
                  {!hasOpenAIKey && (
                    <div className="bg-amber-900/30 border border-amber-500/50 text-amber-200 p-3 rounded-lg text-sm">
                      <i className="fas fa-exclamation-triangle mr-2"></i>
                      –î–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å OpenAI API –∫–ª—é—á. –°–µ–π—á–∞—Å –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã.
                    </div>
                  )}
                </div>
              )}
              
              {activeTab === 'resources' && (
                <div className="space-y-4">
                  <h3 className="text-lg font-semibold mb-4">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã</h3>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <Glassmorphism className="p-4 rounded-xl">
                      <div className="flex items-start">
                        <div className="w-10 h-10 bg-blue-500/20 rounded-lg flex items-center justify-center mr-3">
                          <i className="fas fa-book text-blue-400"></i>
                        </div>
                        <div>
                          <h4 className="font-medium">–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Python</h4>
                          <p className="text-sm text-white/70 mt-1">–ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —è–∑—ã–∫—É Python —Å–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–º –∏ —É—á–µ–±–Ω–∏–∫–æ–º</p>
                          <a href="https://docs.python.org/" target="_blank" rel="noopener noreferrer" className="text-primary text-sm flex items-center mt-2">
                            –û—Ç–∫—Ä—ã—Ç—å —Ä–µ—Å—É—Ä—Å
                            <i className="fas fa-external-link-alt ml-1"></i>
                          </a>
                        </div>
                      </div>
                    </Glassmorphism>
                    
                    <Glassmorphism className="p-4 rounded-xl">
                      <div className="flex items-start">
                        <div className="w-10 h-10 bg-green-500/20 rounded-lg flex items-center justify-center mr-3">
                          <i className="fas fa-laptop-code text-green-400"></i>
                        </div>
                        <div>
                          <h4 className="font-medium">Python –¥–ª—è Data Science</h4>
                          <p className="text-sm text-white/70 mt-1">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —É—á–µ–±–Ω–∏–∫–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é Python –≤ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö</p>
                          <a href="https://www.datacamp.com/courses/intro-to-python-for-data-science" target="_blank" rel="noopener noreferrer" className="text-primary text-sm flex items-center mt-2">
                            –û—Ç–∫—Ä—ã—Ç—å —Ä–µ—Å—É—Ä—Å
                            <i className="fas fa-external-link-alt ml-1"></i>
                          </a>
                        </div>
                      </div>
                    </Glassmorphism>
                    
                    <Glassmorphism className="p-4 rounded-xl">
                      <div className="flex items-start">
                        <div className="w-10 h-10 bg-purple-500/20 rounded-lg flex items-center justify-center mr-3">
                          <i className="fab fa-youtube text-purple-400"></i>
                        </div>
                        <div>
                          <h4 className="font-medium">–í–∏–¥–µ–æ—É—Ä–æ–∫–∏ –ø–æ Python</h4>
                          <p className="text-sm text-white/70 mt-1">–°–µ—Ä–∏—è –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤</p>
                          <a href="https://www.youtube.com/playlist?list=PL-osiE80TeTskrapNbzXhwoFUiLCjGgY7" target="_blank" rel="noopener noreferrer" className="text-primary text-sm flex items-center mt-2">
                            –û—Ç–∫—Ä—ã—Ç—å —Ä–µ—Å—É—Ä—Å
                            <i className="fas fa-external-link-alt ml-1"></i>
                          </a>
                        </div>
                      </div>
                    </Glassmorphism>
                    
                    <Glassmorphism className="p-4 rounded-xl">
                      <div className="flex items-start">
                        <div className="w-10 h-10 bg-red-500/20 rounded-lg flex items-center justify-center mr-3">
                          <i className="fas fa-code text-red-400"></i>
                        </div>
                        <div>
                          <h4 className="font-medium">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ –ø–æ Python</h4>
                          <p className="text-sm text-white/70 mt-1">–°–±–æ—Ä–Ω–∏–∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –Ω–∞–≤—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è</p>
                          <a href="https://www.hackerrank.com/domains/python" target="_blank" rel="noopener noreferrer" className="text-primary text-sm flex items-center mt-2">
                            –û—Ç–∫—Ä—ã—Ç—å —Ä–µ—Å—É—Ä—Å
                            <i className="fas fa-external-link-alt ml-1"></i>
                          </a>
                        </div>
                      </div>
                    </Glassmorphism>
                  </div>
                  
                  <Glassmorphism className="p-4 rounded-xl mt-6">
                    <h4 className="font-medium mb-3">–ö–Ω–∏–≥–∏ –ø–æ Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö</h4>
                    <ul className="space-y-2 text-sm">
                      <li className="flex items-center">
                        <i className="fas fa-book-open text-white/50 mr-2"></i>
                        <span>"Python. –ö –≤–µ—Ä—à–∏–Ω–∞–º –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞" - –õ—É—á–∞–Ω–æ –†–∞–º–∞–ª—å–æ</span>
                      </li>
                      <li className="flex items-center">
                        <i className="fas fa-book-open text-white/50 mr-2"></i>
                        <span>"–ò–∑—É—á–∞–µ–º Python" - –ú–∞—Ä–∫ –õ—É—Ç—Ü</span>
                      </li>
                      <li className="flex items-center">
                        <i className="fas fa-book-open text-white/50 mr-2"></i>
                        <span>"Python. –≠–∫—Å–ø—Ä–µ—Å—Å-–∫—É—Ä—Å" - –ù–∞–æ–º–∏ –°–µ–¥–µ—Ä</span>
                      </li>
                      <li className="flex items-center">
                        <i className="fas fa-book-open text-white/50 mr-2"></i>
                        <span>"–ì—Ä–æ–∫–∞–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º—ã" - –ê–¥–∏—Ç—å—è –ë—Ö–∞—Ä–≥–∞–≤–∞</span>
                      </li>
                    </ul>
                  </Glassmorphism>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞ */}
      <AnimatePresence>
        {showLessonComplete && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black/70 z-50 flex items-center justify-center p-4"
          >
            <motion.div
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.9, opacity: 0 }}
              className="bg-space-900 rounded-xl p-6 max-w-md w-full"
            >
              <div className="text-center">
                <div className="w-20 h-20 rounded-full bg-green-500/20 text-green-400 flex items-center justify-center mx-auto mb-6">
                  <i className="fas fa-check text-4xl"></i>
                </div>
                <h3 className="text-xl font-bold mb-2">–£—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!</h3>
                <p className="text-white/70 mb-6">
                  –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —É—Ä–æ–∫ "{getCurrentLesson()?.title}". –ì–æ—Ç–æ–≤—ã –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ?
                </p>
                <div className="flex space-x-3">
                  <button
                    onClick={() => setShowLessonComplete(false)}
                    className="flex-1 px-4 py-2 bg-space-700 text-white/80 rounded-lg hover:bg-space-600 transition"
                  >
                    –û—Å—Ç–∞—Ç—å—Å—è
                  </button>
                  <button
                    onClick={goToNextLesson}
                    className="flex-1 px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary/80 transition"
                  >
                    –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫
                  </button>
                </div>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </DashboardLayout>
  );
}