import { useEffect, useRef } from 'react';

interface VKIDButtonProps {
  onSuccess?: (data: any) => void;
  onError?: (error: any) => void;
}

declare global {
  interface Window {
    VKIDSDK: any;
  }
}

export function VKIDButton({ onSuccess, onError }: VKIDButtonProps) {
  console.log('[DEBUG] üî• VKIDButton: –ù–û–í–ê–Ø –í–ï–†–°–ò–Ø –ó–ê–ì–†–£–ñ–ï–ù–ê - v2.0 üî•');
  const containerRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º VK ID SDK
    const script = document.createElement('script');
    script.src = 'https://unpkg.com/@vkid/sdk@<3.0.0/dist-sdk/umd/index.js';
    script.onload = initVKID;
    document.head.appendChild(script);

    function initVKID() {
      if ('VKIDSDK' in window && containerRef.current) {
        const VKID = window.VKIDSDK;

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º redirect URL –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ä–µ–¥—ã
        const isProduction = window.location.hostname === 'www.galaxion.ai' || window.location.hostname === 'galaxion.ai';
        const redirectUrl = isProduction 
          ? 'https://www.galaxion.ai/auth/vk/callback'
          : `${window.location.origin}/auth/vk/callback`;

        VKID.Config.init({
          app: 53936548,
          redirectUrl: redirectUrl,
          responseMode: VKID.ConfigResponseMode.Callback,
          source: VKID.ConfigSource.LOWCODE,
          scope: '', // –ë–µ–∑ email scope –¥–ª—è –Ω–∞—á–∞–ª–∞
        });

        const oneTap = new VKID.OneTap();

        oneTap.render({
          container: containerRef.current,
          showAlternativeLogin: true
        })
        .on(VKID.WidgetEvents.ERROR, (error: any) => {
          console.error('[VK ID] –û—à–∏–±–∫–∞ –≤–∏–¥–∂–µ—Ç–∞:', error);
          onError?.(error);
        })
        .on(VKID.OneTapInternalEvents.LOGIN_SUCCESS, async function (payload: any) {
          console.log('[VK ID] –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:', payload);
          
          const code = payload.code;
          const deviceId = payload.device_id;

          try {
            // –û–±–º–µ–Ω–∏–≤–∞–µ–º –∫–æ–¥ –Ω–∞ —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ VK ID SDK
            console.log('[VK ID SDK] –ù–∞—á–∏–Ω–∞–µ–º –æ–±–º–µ–Ω –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω—ã...');
            const data = await VKID.Auth.exchangeCode(code, deviceId);
            console.log('[VK ID SDK] ‚úÖ –û–±–º–µ–Ω –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
            console.log('[VK ID SDK] üîç –ù–ê–ß–ò–ù–ê–ï–ú –î–ò–ê–ì–ù–û–°–¢–ò–ö–£ –ü–û–°–õ–ï –ü–û–õ–£–ß–ï–ù–ò–Ø –¢–û–ö–ï–ù–û–í...');
            
            // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
            try {
              console.log('[VK ID SDK] –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', Object.keys(data));
              console.log('[VK ID SDK] –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö:', typeof data);
            } catch (keyError) {
              console.error('[VK ID SDK] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∫–ª—é—á–µ–π:', keyError);
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å access_token
            if (!data || !data.access_token) {
              console.error('[VK ID SDK] –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç access_token. –î–∞–Ω–Ω—ã–µ:', data);
              throw new Error('–ù–µ—Ç access_token –≤ –æ—Ç–≤–µ—Ç–µ VK ID SDK');
            }
            
            console.log('[VK ID SDK] access_token –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...');
            
            console.log('[VK ID SDK] –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è backend...');
            
            // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            let authData;
            try {
              authData = {
                access_token: data.access_token || null,
                refresh_token: data.refresh_token || null,
                id_token: data.id_token || null,
                source: 'vk_id_sdk'
              };
              console.log('[VK ID SDK] –î–∞–Ω–Ω—ã–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã:', authData);
            } catch (dataError) {
              console.error('[VK ID SDK] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:', dataError);
              throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è backend');
            }
            
            console.log('[VK ID SDK] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ backend...');
            console.log('[VK ID SDK] URL:', window.location.origin + '/api/vk/auth');
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ backend
            console.log('[VK ID SDK] –í—ã–ø–æ–ª–Ω—è–µ–º fetch –∑–∞–ø—Ä–æ—Å...');
            let response;
            try {
              response = await fetch('/api/vk/auth', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                credentials: 'include',
                body: JSON.stringify(authData)
              });
              console.log('[VK ID SDK] Fetch –∑–∞–≤–µ—Ä—à–µ–Ω, —Å—Ç–∞—Ç—É—Å:', response.status);
            } catch (fetchError) {
              console.error('[VK ID SDK] –û—à–∏–±–∫–∞ fetch –∑–∞–ø—Ä–æ—Å–∞:', fetchError);
              throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä');
            }

            if (response.ok) {
              console.log('[VK ID SDK] –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω—ã–π, –ø–∞—Ä—Å–∏–º JSON...');
              const result = await response.json();
              console.log('[VK ID SDK] Backend –æ—Ç–≤–µ—Ç:', result);
              
              // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
              console.log('[VK ID SDK] –û–±–Ω–æ–≤–ª—è–µ–º –∫–µ—à –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
              
              // –ï—Å–ª–∏ –µ—Å—Ç—å onSuccess callback, –≤—ã–∑—ã–≤–∞–µ–º –µ–≥–æ
              if (onSuccess) {
                console.log('[VK ID SDK] –í—ã–∑—ã–≤–∞–µ–º onSuccess callback...');
                onSuccess(result);
              }
              
              console.log('[VK ID SDK] ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
              
            } else {
              console.log('[VK ID SDK] –û—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π, —á–∏—Ç–∞–µ–º —Ç–µ–∫—Å—Ç...');
              const errorText = await response.text();
              console.error('[VK ID SDK] Backend –æ—à–∏–±–∫–∞:', response.status, errorText);
              throw new Error(`Backend –æ—à–∏–±–∫–∞: ${response.status} - ${errorText}`);
            }
          } catch (error) {
            console.error('[VK ID SDK] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í –ü–†–û–¶–ï–°–°–ï –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò:', error);
            console.error('[VK ID SDK] –¢–∏–ø –æ—à–∏–±–∫–∏:', typeof error);
            console.error('[VK ID SDK] –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error instanceof Error ? error.message : String(error));
            
            if (error instanceof Error) {
              console.error('[VK ID SDK] Stack trace:', error.stack);
            }
            
            onError?.(error);
          }
        });
      }
    }

    return () => {
      // Cleanup
      const scripts = document.querySelectorAll('script[src*="@vkid/sdk"]');
      scripts.forEach(script => script.remove());
    };
  }, [onSuccess, onError]);

  return (
    <div>
      <div ref={containerRef} className="vk-id-button-container" />
      <style>{`
        .vk-id-button-container {
          margin: 10px 0;
        }
        .vk-id-button-container iframe {
          border-radius: 8px !important;
        }
      `}</style>
    </div>
  );
}
