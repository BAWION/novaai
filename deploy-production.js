#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è NovaAI University –≤ –ø—Ä–æ–¥–∞–∫—à–Ω
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Vercel —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –¥–æ–º–µ–Ω–æ–º
 */

import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

const COLORS = {
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  red: '\x1b[31m',
  blue: '\x1b[34m',
  reset: '\x1b[0m'
};

function log(message, color = 'reset') {
  console.log(`${COLORS[color]}${message}${COLORS.reset}`);
}

function checkRequirements() {
  log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...', 'blue');
  
  try {
    execSync('npm --version', { stdio: 'ignore' });
    log('‚úÖ Node.js –∏ npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã', 'green');
  } catch (error) {
    log('‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω', 'red');
    process.exit(1);
  }

  try {
    execSync('vercel --version', { stdio: 'ignore' });
    log('‚úÖ Vercel CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', 'green');
  } catch (error) {
    log('‚ö†Ô∏è  Vercel CLI –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm i -g vercel', 'yellow');
    log('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Vercel CLI...', 'blue');
    execSync('npm install -g vercel', { stdio: 'inherit' });
  }
}

function buildProject() {
  log('üèóÔ∏è  –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...', 'blue');
  
  try {
    execSync('npm run build', { stdio: 'inherit' });
    log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ', 'green');
  } catch (error) {
    log('‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞', 'red');
    process.exit(1);
  }
}

function createEnvFile() {
  log('üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...', 'blue');
  
  const envExample = `# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω
# –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Vercel

OPENAI_API_KEY=your_openai_key_here
ANTHROPIC_API_KEY=your_anthropic_key_here
DATABASE_URL=your_database_url_here
NODE_ENV=production

# API URL –¥–ª—è Replit (–æ–±–Ω–æ–≤–∏—Ç–µ –Ω–∞ –≤–∞—à –∞–∫—Ç—É–∞–ª—å–Ω—ã–π URL)
REPLIT_API_URL=https://49c11d52-b1fc-4151-bb61-b9097616c44f-00-3h2ne9cwwtbvn.janeway.replit.dev
`;

  fs.writeFileSync('.env.production', envExample);
  log('‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.production —Å –ø—Ä–∏–º–µ—Ä–æ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö', 'green');
}

function deployToVercel() {
  log('üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel...', 'blue');
  
  try {
    execSync('vercel --prod', { stdio: 'inherit' });
    log('‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!', 'green');
  } catch (error) {
    log('‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è', 'red');
    process.exit(1);
  }
}

function showInstructions() {
  log('\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï –î–û–ú–ï–ù–ê:', 'blue');
  log('1. –ó–∞–π–¥–∏—Ç–µ –≤ –ø–∞–Ω–µ–ª—å Vercel: https://vercel.com/dashboard', 'yellow');
  log('2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç NovaAI University', 'yellow');
  log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Settings ‚Üí Domains', 'yellow');
  log('4. –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: novaai-university.com)', 'yellow');
  log('5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS —É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–º–µ–Ω–∞:', 'yellow');
  log('   Type: CNAME', 'yellow');
  log('   Name: @ (–∏–ª–∏ www)', 'yellow');
  log('   Value: cname.vercel-dns.com', 'yellow');
  
  log('\nüîß –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø:', 'blue');
  log('–î–æ–±–∞–≤—å—Ç–µ –≤ Settings ‚Üí Environment Variables:', 'yellow');
  log('- OPENAI_API_KEY', 'yellow');
  log('- ANTHROPIC_API_KEY', 'yellow');
  log('- DATABASE_URL (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –ë–î)', 'yellow');
  
  log('\n‚ú® –ì–û–¢–û–í–û!', 'green');
  log('–í–∞—à–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ –≤–∞—à–µ–º –¥–æ–º–µ–Ω–µ —á–µ—Ä–µ–∑ 5-10 –º–∏–Ω—É—Ç', 'green');
}

function main() {
  log('üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ NovaAI University –≤ –ø—Ä–æ–¥–∞–∫—à–Ω\n', 'blue');
  
  checkRequirements();
  buildProject();
  createEnvFile();
  deployToVercel();
  showInstructions();
}

main();