#!/usr/bin/env node
/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å GitHub
 * –°–æ–∑–¥–∞–µ—Ç –∞—Ä—Ö–∏–≤ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Galaxion
 */

import fs from 'fs';
import path from 'path';
import { execSync } from 'child_process';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const colors = {
  green: '\x1b[32m',
  blue: '\x1b[34m',
  yellow: '\x1b[33m',
  red: '\x1b[31m',
  cyan: '\x1b[36m',
  reset: '\x1b[0m',
  bold: '\x1b[1m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

function getCurrentTimestamp() {
  const now = new Date();
  return now.toISOString().slice(0, 19).replace(/:/g, '-');
}

function createGitHubSyncPackage() {
  const timestamp = getCurrentTimestamp();
  const packageDir = `galaxion-update-${timestamp}`;
  
  log(`\nüöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –¥–ª—è GitHub —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏`, 'bold');
  log(`${'='.repeat(50)}`, 'cyan');
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø–∞–∫–µ—Ç–∞
  if (!fs.existsSync(packageDir)) {
    fs.mkdirSync(packageDir, { recursive: true });
  }

  // –°–ø–∏—Å–æ–∫ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è GitHub
  const criticalFiles = [
    // Frontend –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    'client/src/components/layout/navbar.tsx',
    'client/src/components/main-layout.tsx',
    'client/src/pages/home-page.tsx',
    'client/src/pages/onboarding-intro.tsx',
    'client/src/pages/presentation-selector.tsx',
    
    // HTML –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    'client/index.html',
    'index.html',
    'public/manifest.json',
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    'vercel.json',
    'package.json',
    'tailwind.config.ts',
    
    // –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
    'README.md',
    'replit.md'
  ];

  let copiedFiles = 0;
  let skippedFiles = 0;

  // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
  criticalFiles.forEach(file => {
    if (fs.existsSync(file)) {
      const targetPath = path.join(packageDir, file);
      const targetDir = path.dirname(targetPath);
      
      // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      if (!fs.existsSync(targetDir)) {
        fs.mkdirSync(targetDir, { recursive: true });
      }
      
      // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
      fs.copyFileSync(file, targetPath);
      log(`‚úÖ ${file}`, 'green');
      copiedFiles++;
    } else {
      log(`‚ùå ${file} (–Ω–µ –Ω–∞–π–¥–µ–Ω)`, 'red');
      skippedFiles++;
    }
  });

  // –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
  try {
    execSync(`zip -r ${packageDir}.zip ${packageDir}`, { stdio: 'inherit' });
    log(`\nüì¶ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: ${packageDir}.zip`, 'cyan');
  } catch (error) {
    log(`\n‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å ZIP –∞—Ä—Ö–∏–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–ø–∫—É ${packageDir}`, 'yellow');
  }

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:`, 'bold');
  log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${copiedFiles}`, 'green');
  if (skippedFiles > 0) {
    log(`‚ùå –ü—Ä–æ–ø—É—â–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${skippedFiles}`, 'red');
  }
  log(`üìÅ –ü–∞–∫–µ—Ç —Å–æ–∑–¥–∞–Ω –≤: ./${packageDir}/`, 'cyan');

  // –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è GitHub
  generateGitHubInstructions(packageDir, timestamp);
  
  return packageDir;
}

function generateGitHubInstructions(packageDir, timestamp) {
  const instructions = `
üöÄ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è GitHub —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
====================================

üì¶ –ü–ê–ö–ï–¢: ${packageDir}

### –°–ü–û–°–û–ë 1: –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å GitHub (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
1. –û—Ç–∫—Ä–æ–π—Ç–µ https://github.com/BAWION/novaai
2. –ù–∞–∂–º–∏—Ç–µ "Add file" ‚Üí "Upload files"
3. –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏ ${packageDir}/ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–ø–∫–∏
4. –°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞:

feat: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Galaxion ${timestamp}

- –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π Galaxion –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
- –û–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
- –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ https://www.galaxion.org/
- –ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: ${new Date().toLocaleString('ru')}

5. –ù–∞–∂–º–∏—Ç–µ "Commit changes"

### –°–ü–û–°–û–ë 2: –ü—Ä—è–º–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ GitHub
–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:
- client/src/components/layout/navbar.tsx (–ª–æ–≥–æ—Ç–∏–ø "Galaxion")
- client/index.html (title "Galaxion - AI Educational Platform")
- public/manifest.json (name "Galaxion")

### –†–ï–ó–£–õ–¨–¢–ê–¢
–ü–æ—Å–ª–µ –∫–æ–º–º–∏—Ç–∞ Vercel –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å–æ–±–µ—Ä–µ—Ç https://www.galaxion.org/
—Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏.

‚ú® –ü–∞–∫–µ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–≥—Ä—É–∑–∫–µ!
üéØ –¶–µ–ª—å: —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å https://www.galaxion.org/ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
üìÅ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ${packageDir}/
`;

  log(instructions, 'blue');
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ —Ñ–∞–π–ª
  fs.writeFileSync(`${packageDir}/GITHUB_SYNC_INSTRUCTIONS.md`, instructions);
  log(`üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${packageDir}/GITHUB_SYNC_INSTRUCTIONS.md`, 'green');
}

function updateReplitMd(packageDir) {
  try {
    const replitMdPath = 'replit.md';
    if (fs.existsSync(replitMdPath)) {
      let content = fs.readFileSync(replitMdPath, 'utf8');
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ Changelog
      const newEntry = `- ${new Date().toLocaleDateString('en-CA')}: –°–û–ó–î–ê–ù –ê–†–•–ò–í –î–õ–Ø GITHUB –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò
  - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω –ø–∞–∫–µ—Ç ${packageDir}
  - –ì–æ—Ç–æ–≤ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
  - –°–æ–¥–µ—Ä–∂–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
  - –¶–µ–ª—å: —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è https://www.galaxion.org/ —Å GitHub`;
      
      // –ù–∞—Ö–æ–¥–∏–º —Å–µ–∫—Ü–∏—é Changelog –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
      if (content.includes('## Changelog')) {
        content = content.replace(
          '## Changelog\n',
          `## Changelog\n\n${newEntry}\n`
        );
        fs.writeFileSync(replitMdPath, content);
        log(`üìù –û–±–Ω–æ–≤–ª–µ–Ω replit.md —Å –∑–∞–ø–∏—Å—å—é –æ –Ω–æ–≤–æ–º –∞—Ä—Ö–∏–≤–µ`, 'green');
      }
    }
  } catch (error) {
    log(`‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å replit.md: ${error.message}`, 'yellow');
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  try {
    const packageDir = createGitHubSyncPackage();
    updateReplitMd(packageDir);
    
    log(`\nüéâ GitHub —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞!`, 'bold');
    log(`üìÅ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–ø–∫—É: ${packageDir}`, 'cyan');
    log(`üåê –¶–µ–ª—å: –æ–±–Ω–æ–≤–∏—Ç—å https://www.galaxion.org/`, 'blue');
    
  } catch (error) {
    log(`\n‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–∫–µ—Ç–∞: ${error.message}`, 'red');
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  main();
}

export { createGitHubSyncPackage, generateGitHubInstructions };